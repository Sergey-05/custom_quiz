[
  {
    "question": "Системная программа – это",
    "answers": [
      {
        "text": "Программа, предназначенная для поддержания работоспособности СОИ или повышения эффективности ее использования",
        "correct": true
      },
      {
        "text": "Программа, предназначенная для работоспособности ИСО или повышения эффективности ее использования",
        "correct": false
      },
      {
        "text": "Совокупность программ СОИ и программных документов, необходимых для их эксплуатации",
        "correct": false
      }
    ]
  },
  {
    "question": "Прикладная программа – это",
    "answers": [
      {
        "text": "Программа, предназначенная для поддержания работоспособности СОИ или повышения эффективности ее использования",
        "correct": false
      },
      {
        "text": "Программа, предназначенная для решения задачи или класса задач в определенной области применения СОИ",
        "correct": true
      },
      {
        "text": "Программа, предназначенная для решения задачи или класса задач, редактирования в определенной области применения ИСО",
        "correct": false
      }
    ]
  },
  {
    "question": "Управляющая программа – это",
    "answers": [
      {
        "text": "Системная программа, реализующая набор функций управления, который включает в себя управление ресурсами и взаимодействие с внешней средой СОИ, восстановление работы системы после проявления неисправностей в технических средствах",
        "correct": true
      },
      {
        "text": "Системная программа, реализующая набор класса задач управления, который включает в себя управление ресурсами и взаимодействие с внешней средой ИСО, восстановление работы системы после проявления неполадок в технических средствах",
        "correct": false
      },
      {
        "text": "Программа, предназначенная для оказания услуг общего характера пользователям и обслуживающему персоналу СОИ",
        "correct": false
      }
    ]
  },
  {
    "question": "Язык Ассемблера – это",
    "answers": [
      {
        "text": "Язык программирования, который представляет собой символьную форму машинного языка с рядом возможностей, характерных для языка высокого уровня (обычно включает в себя макросредства)",
        "correct": true
      },
      {
        "text": "Язык программирования, предназначенный для представления программы в форме, позволяющей выполнять ее непосредственно техническими средствами обработки информации",
        "correct": false
      },
      {
        "text": "Символьный язык программирования, предложения которого по своей структуре в основном подобны командам и обрабатываемым данным конкретного машинного языка",
        "correct": false
      }
    ]
  },
  {
    "question": "Язык высокого уровня – это",
    "answers": [
      {
        "text": "Язык программирования, который представляет собой символьную форму",
        "correct": false
      },
      {
        "text": "Язык программирования, понятия и структура которого удобны для восприятия человеком",
        "correct": true
      },
      {
        "text": "Структурный язык программирования",
        "correct": false
      }
    ]
  },
  {
    "question": "Объектный модуль – это",
    "answers": [
      {
        "text": "Программный модуль, получаемый в результате трансляции исходного модуля",
        "correct": true
      },
      {
        "text": "Программный модуль на исходном языке, обрабатываемый транслятором",
        "correct": false
      },
      {
        "text": "Программный модуль, который представляет собой символьную форму машинного языка с рядом возможностей",
        "correct": false
      }
    ]
  },
  {
    "question": "Загрузочный модуль – это",
    "answers": [
      {
        "text": "Программный модуль, получаемый в результате трансляции исходного модуля",
        "correct": false
      },
      {
        "text": "Программный модуль, представленный в форме, пригодной для загрузки в оперативную память для выполнения",
        "correct": true
      },
      {
        "text": "Программный модуль, который представляет собой символьную форму машинного языка с рядом возможностей",
        "correct": false
      }
    ]
  },
  {
    "question": "Интерпретация – это",
    "answers": [
      {
        "text": "Реализация смысла некоторого текста, представленного на машинном языке",
        "correct": false
      },
      {
        "text": "Реализация смысла некоторого модуля, представленного на языке Ассемблер",
        "correct": false
      },
      {
        "text": "Реализация смысла некоторого синтаксически законченного текста, представленного на конкретном языке",
        "correct": true
      }
    ]
  },
  {
    "question": "Что такое «Комментарии» на языке Ассемблер",
    "answers": [
      {
        "text": "Это набор выделенных символов",
        "correct": false
      },
      {
        "text": "Это любой текст, который игнорируется Ассемблером",
        "correct": true
      },
      {
        "text": "Это любой текст",
        "correct": false
      }
    ]
  },
  {
    "question": "Принцип модульности – это",
    "answers": [
      {
        "text": "Разбиения сложной программы на составные части, каждая из которых может подготавливаться отдельно",
        "correct": true
      },
      {
        "text": "Разбиение программы по модулям",
        "correct": false
      },
      {
        "text": "Разработка программ сложной структуры",
        "correct": false
      }
    ]
  },
  {
    "question": "Загрузочный модуль сохраняется в виде файла на..",
    "answers": [
      {
        "text": "Оперативной памяти",
        "correct": false
      },
      {
        "text": "Внешней памяти",
        "correct": true
      }
    ]
  },
  {
    "question": "Данные, предназначенные для управления конкретными компонентами системы обработки информации (СОИ) в целях реализации определенного алгоритма – это",
    "answers": [
      {
        "text": "Программа",
        "correct": true
      },
      {
        "text": "Таблица",
        "correct": false
      },
      {
        "text": "Программное обеспечение",
        "correct": false
      }
    ]
  },
  {
    "question": "Системная программа, реализующая набор функций управления, который включает в себя управление ресурсами и взаимодействие с внешней средой СОИ, восстановление работы системы после проявления неисправностей в технических средствах - это",
    "answers": [
      {
        "text": "Системная программа",
        "correct": false
      },
      {
        "text": "Управляющая программа",
        "correct": true
      },
      {
        "text": "Прикладная программа",
        "correct": false
      }
    ]
  },
  {
    "question": "Система, образуемая языком программирования, компилятором или интерпретатором программ, представленных на этом языке, соответствующей документацией, а также вспомогательными средствами для подготовки программ к форме, пригодной для выполнения – это",
    "answers": [
      {
        "text": "Система программирования",
        "correct": true
      },
      {
        "text": "Программное обеспечение",
        "correct": false
      },
      {
        "text": "Программа обслуживания (утилита)",
        "correct": false
      }
    ]
  },
  {
    "question": "Программа, предназначенная для оказания услуг общего характера пользователям и обслуживающему персоналу СОИ – это",
    "answers": [
      {
        "text": "Программное СОИ",
        "correct": false
      },
      {
        "text": "Программное обеспечение",
        "correct": false
      },
      {
        "text": "Программа обслуживания (утилита)",
        "correct": true
      }
    ]
  },
  {
    "question": "Программа или функционально завершенный фрагмент программы, предназначенный для хранения, трансляции, объединения с другими программными модулями и загрузки в оперативную память",
    "answers": [
      {
        "text": "Программный модуль",
        "correct": true
      },
      {
        "text": "Исходный модуль",
        "correct": false
      },
      {
        "text": "Программа обслуживания (утилита)",
        "correct": false
      }
    ]
  },
  {
    "question": "Программный модуль на исходном языке, обрабатываемый транслятором и представляемый для него как целое, достаточное для проведения трансляции - это",
    "answers": [
      {
        "text": "Программный модуль",
        "correct": false
      },
      {
        "text": "Исходный модуль",
        "correct": true
      },
      {
        "text": "рограмма обслуживания (утилита)",
        "correct": false
      }
    ]
  },
  {
    "question": "Преобразование программы, представленной на одном языке программирования, в программу на другом языке программирования, в определенном смысле равносильную первой – это",
    "answers": [
      {
        "text": "Интерпретация",
        "correct": false
      },
      {
        "text": "Машинный язык",
        "correct": false
      },
      {
        "text": "Трансляция",
        "correct": true
      }
    ]
  },
  {
    "question": "Язык программирования, предназначенный для представления программы в форме, позволяющей выполнять ее непосредственно техническими средствами обработки информации – это",
    "answers": [
      {
        "text": "Интерпретация",
        "correct": false
      },
      {
        "text": "Машинный язык",
        "correct": true
      },
      {
        "text": "Трансляция",
        "correct": false
      }
    ]
  },
  {
    "question": "Символьный язык программирования, предложения которого по своей структуре в основном подобны командам и обрабатываемым данным конкретного машинного языка – это",
    "answers": [
      {
        "text": "Трансляция",
        "correct": false
      },
      {
        "text": "Автокод",
        "correct": true
      },
      {
        "text": "Язык Ассемблера",
        "correct": false
      }
    ]
  },
  {
    "question": "Язык программирования, который представляет собой символьную форму машинного языка с рядом возможностей, характерных для языка высокого уровня (обычно включает в себя макросредства) – это",
    "answers": [
      {
        "text": "Язык Ассемблера",
        "correct": true
      },
      {
        "text": "Язык высокого уровня",
        "correct": false
      },
      {
        "text": "Visual Basic",
        "correct": false
      }
    ]
  },
  {
    "question": "Программный модуль, получаемый в результате трансляции исходного модуля – это",
    "answers": [
      {
        "text": "Исходный модуль",
        "correct": false
      },
      {
        "text": "Загрузочный модуль",
        "correct": false
      },
      {
        "text": "Объектный модуль",
        "correct": true
      }
    ]
  },
  {
    "question": "Программный модуль, представленный в форме, пригодной для загрузки в оперативную память для выполнения – это",
    "answers": [
      {
        "text": "Исходный модуль",
        "correct": false
      },
      {
        "text": "Загрузочный модуль",
        "correct": true
      },
      {
        "text": "Объектный модуль",
        "correct": false
      }
    ]
  },
  {
    "question": "Реализация смысла некоторого синтаксически законченного текста, представленного на конкретном языке – это",
    "answers": [
      {
        "text": "Трансляция",
        "correct": false
      },
      {
        "text": "Интерпретация",
        "correct": true
      },
      {
        "text": "Комментарий",
        "correct": false
      }
    ]
  },
  {
    "question": "Разбиения сложной программы на составные части, каждая из которых может подготавливаться отдельно – это",
    "answers": [
      {
        "text": "Принцип модульности",
        "correct": true
      },
      {
        "text": "Целевая ВС",
        "correct": false
      },
      {
        "text": "Системное программирование",
        "correct": false
      }
    ]
  },
  {
    "question": "Интерфейс – это",
    "answers": [
      {
        "text": "Совокупность текстовых и графических информационных структур",
        "correct": false
      },
      {
        "text": "Совокупность стандартизованных аппаратных и программных средств, обеспечивающих обмен информации между устройствами",
        "correct": true
      },
      {
        "text": "Совокупность стандартизованных текстовых и графических средств, обеспечивающих обмен базами данных между устройствами",
        "correct": false
      }
    ]
  },
  {
    "question": "1-е поколение, 50-е годы: ЭВМ на…",
    "answers": [
      {
        "text": "Электронных вакуумных лампах (термин “электронные” является частью названия этой элементной базы);",
        "correct": true
      },
      {
        "text": "Полупроводниковых приборах (транзисторах);",
        "correct": false
      },
      {
        "text": "Больших и сверхбольших интегральных схемах, основная из которых – микропроцессор (сотни тысяч – десятки миллионов активных элементов водном кристале);",
        "correct": false
      }
    ]
  },
  {
    "question": "2-е поколение, 60-е годы: ЭВМ на…",
    "answers": [
      {
        "text": "Электронных вакуумных лампах (термин “электронные” является частью названия этой элементной базы)",
        "correct": false
      },
      {
        "text": "Полупроводниковых интегральных схемах с малой и средней степенью интеграции",
        "correct": false
      },
      {
        "text": "Полупроводниковых приборах (транзисторах)",
        "correct": true
      }
    ]
  },
  {
    "question": "3-е поколение, 70-е годы: ЭВМ на…",
    "answers": [
      {
        "text": "Полупроводниковых интегральных схемах с малой и средней степенью интеграции",
        "correct": true
      },
      {
        "text": "Больших и сверхбольших интегральных схемах, основная из которых – микропроцессор (сотни тысяч – десятки миллионов активных элементов водном кристале)",
        "correct": false
      },
      {
        "text": "Электронных вакуумных лампах (термин “электронные” является частью названия этой элементной базы)",
        "correct": false
      }
    ]
  },
  {
    "question": "4-е поколение, 80-90-е годы: ЭВМ на…",
    "answers": [
      {
        "text": "Больших и сверхбольших интегральных схемах, основная из которых – микропроцессор (сотни тысяч – десятки миллионов активных элементов водном кристалле);",
        "correct": true
      },
      {
        "text": "Полупроводниковых интегральных схемах с малой и средней степенью интеграции;",
        "correct": false
      },
      {
        "text": "Электронных вакуумных лампах (термин “электронные” является частью названия этой элементной базы);",
        "correct": false
      }
    ]
  },
  {
    "question": "Команда машинной программы – это..",
    "answers": [
      {
        "text": "Сложно структурированная инструкция машине, выполняемая ею с помощью каких-либо дополнительных указаний или пояснений",
        "correct": false
      },
      {
        "text": "Элементарная инструкция машине, выполняемая ею автоматически без каких-либо дополнительных указаний или пояснений",
        "correct": true
      }
    ]
  },
  {
    "question": "Элементарная инструкция машине, выполняемая ею автоматически без каких-либо дополнительных указаний или пояснений.",
    "answers": [
      {
        "text": "Команда машинной программы",
        "correct": true
      },
      {
        "text": "Принцип модульности",
        "correct": false
      },
      {
        "text": "Группа алгоритмов",
        "correct": false
      }
    ]
  },
  {
    "question": "Операционная часть команды (КОП - код операции) – это",
    "answers": [
      {
        "text": "Группа задач в команде, предназначенная для записи аббревиатуры выполняемого действия",
        "correct": false
      },
      {
        "text": "Группа алгоритмов в команде, предназначенная для записи значений выполняемого действия",
        "correct": false
      },
      {
        "text": "Группа разрядов в команде, предназначенная для записи аббревиатуры выполняемого действия",
        "correct": true
      }
    ]
  },
  {
    "question": "Адресная часть команды (адреса) - это",
    "answers": [
      {
        "text": "Группа разрядов в команде, в которых записываются чаще всего идентификаторы данных или имена регистров Ml 111, хранящих информацию, или метки машинных команд",
        "correct": true
      },
      {
        "text": "Группа разрядов в задаче, в которых записываются чаще всего идентификаторы данных или имена регистров Ml 111, хранящих алгоритм, или метки машинных команд задач",
        "correct": false
      }
    ]
  },
  {
    "question": "Состав, порядок и принципы взаимодействия элементов системы, определяющие основные свойства системы",
    "answers": [
      {
        "text": "Вычислительная система",
        "correct": false
      },
      {
        "text": "Система счисления",
        "correct": false
      },
      {
        "text": "Структура системы",
        "correct": true
      }
    ]
  },
  {
    "question": "Система счисления – это",
    "answers": [
      {
        "text": "Программный модуль, получаемый в результате трансляции исходного модуля",
        "correct": false
      },
      {
        "text": "Способ наименования и изображения чисел с помощью символов, имеющих определенное количественное значение",
        "correct": true
      },
      {
        "text": "Совокупность программ СОИ и программных документов, необходимых для их эксплуатации",
        "correct": false
      }
    ]
  },
  {
    "question": "Система программирования - это",
    "answers": [
      {
        "text": "Системная программа, реализующая набор класса задач управления, который включает в себя управление ресурсами и взаимодействие с внешней средой ИСО, восстановление работы системы после проявления неполадок в технических средствах",
        "correct": false
      },
      {
        "text": "Системная программа, реализующая набор функций управления, который включает в себя управление ресурсами и взаимодействие с внешней средой СОИ, восстановление работы системы после проявления неисправностей в технических средствах",
        "correct": false
      },
      {
        "text": "Система, образуемая языком программирования, компилятором или интерпретатором программ, представленных на этом языке, соответствующей документацией, а также вспомогательными средствами для подготовки программ к форме, пригодной для выполнения",
        "correct": true
      }
    ]
  },
  {
    "question": "Программа обслуживания (утилита) – это",
    "answers": [
      {
        "text": "Системная программа, реализующая набор функций управления",
        "correct": false
      },
      {
        "text": "Программа, предназначенная для оказания услуг общего характера пользователям и обслуживающему персоналу СОИ",
        "correct": true
      },
      {
        "text": "Разработка программ сложной структуры",
        "correct": false
      }
    ]
  },
  {
    "question": "Программный модуль – это",
    "answers": [
      {
        "text": "Программа или функционально завершенный фрагмент программы, предназначенный для хранения, трансляции, объединения с другими программными модулями и загрузки в оперативную память",
        "correct": true
      },
      {
        "text": "Программа предназначенная для хранения, изменения, трансляции, объединения с другими программами и загрузки в оперативную память",
        "correct": false
      },
      {
        "text": "Программа, предназначенная для оказания услуг общего характера пользователям и обслуживающему персоналу СОИ",
        "correct": false
      }
    ]
  },
  {
    "question": "Программное обеспечение (ПО) – это…",
    "answers": [
      {
        "text": "это данные, предназначенные для управления конкретными компонентами системы обработки информации (СОИ) в целях реализации определенного алгоритма",
        "correct": false
      },
      {
        "text": "программа, предназначенная для поддержания работоспособности СОИ или повышения эффективности ее использования",
        "correct": false
      },
      {
        "text": "совокупность программ СОИ и программных документов, необходимых для их эксплуатации",
        "correct": true
      }
    ]
  },
  {
    "question": "Системное программирование – это…",
    "answers": [
      {
        "text": "это процесс разработки системных программ (в т.ч., управляющих и обслуживающих)",
        "correct": true
      },
      {
        "text": "разбиение сложной программы на составные части, каждая из которых может подготавливаться отдельно",
        "correct": false
      },
      {
        "text": "преобразование программы, представленной на одном языке программирования, в программу на другом языке программирования, в определенном смысле равносильную первой",
        "correct": false
      }
    ]
  },
  {
    "question": "Промежуточное ПО – это…",
    "answers": [
      {
        "text": "совокупность программ СОИ и программных документов, необходимых для их эксплуатации",
        "correct": false
      },
      {
        "text": "программа, предназначенная для поддержания работоспособности СОИ или повышения эффективности ее использования",
        "correct": false
      },
      {
        "text": "совокупность программ, осуществляющих управление вторичными (конструируемыми самим ПО) ресурсами, ориентированными на решение определенного (широкого) класса задач",
        "correct": true
      }
    ]
  },
  {
    "question": "Управляющая программа – это…",
    "answers": [
      {
        "text": "системная программа, реализующая набор функций управления, который включает в себя управление ресурсами и взаимодействие с внешней средой СОИ, восстановление работы системы после проявления неисправностей в технических средствах",
        "correct": true
      },
      {
        "text": "программа, предназначенная для поддержания работоспособности СОИ или повышения эффективности ее использования",
        "correct": false
      },
      {
        "text": "программа, предназначенная для оказания услуг общего характера пользователям и обслуживающему персоналу СОИ",
        "correct": false
      }
    ]
  },
  {
    "question": "Машинный язык – это…",
    "answers": [
      {
        "text": "язык программирования, предназначенный для представления программы в форме, позволяющей выполнять ее непосредственно техническими средствами обработки информации",
        "correct": true
      },
      {
        "text": "символьный язык программирования, предложения которого по своей структуре в основном подобны командам и обрабатываемым данным конкретного машинного языка",
        "correct": false
      },
      {
        "text": "язык программирования, который представляет собой символьную форму машинного языка с рядом возможностей, характерных для языка высокого уровня (обычно включает в себя макросредства)",
        "correct": false
      },
      {
        "text": "язык программирования, понятия и структура которого удобны для восприятия человеком",
        "correct": false
      }
    ]
  },
  {
    "question": "Язык Ассемблера – это…",
    "answers": [
      {
        "text": "символьный язык программирования, предложения которого по своей структуре в основном подобны командам и обрабатываемым данным конкретного машинного языка",
        "correct": false
      },
      {
        "text": "язык программирования, который представляет собой символьную форму машинного языка с рядом возможностей, характерных для языка высокого уровня (обычно включает в себя макросредства)",
        "correct": true
      },
      {
        "text": "язык программирования, понятия и структура которого удобны для восприятия человеком",
        "correct": false
      },
      {
        "text": "язык программирования, предназначенный для представления программы в форме, позволяющей выполнять ее непосредственно техническими средствами обработки информации",
        "correct": false
      }
    ]
  },
  {
    "question": "Язык высокого уровня - …",
    "answers": [
      {
        "text": "язык программирования, предназначенный для представления программы в форме, позволяющей выполнять ее непосредственно техническими средствами обработки информации",
        "correct": false
      },
      {
        "text": "символьный язык программирования, предложения которого по своей структуре в основном подобны командам и обрабатываемым данным конкретного машинного языка",
        "correct": false
      },
      {
        "text": "язык программирования, который представляет собой символьную форму машинного языка с рядом возможностей, характерных для языка высокого уровня (обычно включает в себя макросредства)",
        "correct": false
      },
      {
        "text": "язык программирования, понятия и структура которого удобны для восприятия человеком",
        "correct": true
      }
    ]
  },
  {
    "question": "Загрузочный модуль – это…",
    "answers": [
      {
        "text": "программный модуль на исходном языке, обрабатываемый транслятором и представляемый для него как целое, достаточное для проведения трансляции",
        "correct": false
      },
      {
        "text": "программный модуль, получаемый в результате трансляции исходного модуля",
        "correct": false
      },
      {
        "text": "программный модуль, представленный в форме, пригодной для загрузки в оперативную память для выполнения",
        "correct": true
      }
    ]
  },
  {
    "question": "Интерпретация – это…",
    "answers": [
      {
        "text": "разбиение сложной программы на составные части, каждая из которых может подготавливаться отдельно",
        "correct": false
      },
      {
        "text": "это процесс разработки системных программ (в т.ч., управляющих и обслуживающих",
        "correct": false
      },
      {
        "text": "преобразование программы, представленной на одном языке программирования, в программу на другом языке программирования, в определенном смысле равносильную первой",
        "correct": false
      },
      {
        "text": "реализация смысла некоторого синтаксически законченного текста, представленного на конкретном языке",
        "correct": true
      }
    ]
  },
  {
    "question": "Мнемоника – это…",
    "answers": [
      {
        "text": "символическое обозначение команды/псевдокоманды",
        "correct": true
      },
      {
        "text": "имена регистров",
        "correct": false
      },
      {
        "text": "записанные в особой форме константы",
        "correct": false
      }
    ]
  },
  {
    "question": "Команды языка ассемблера – это…",
    "answers": [
      {
        "text": "символическое обозначение команды/псевдокоманды",
        "correct": false
      },
      {
        "text": "имена регистров",
        "correct": false
      },
      {
        "text": "записанные в особой форме константы",
        "correct": false
      },
      {
        "text": "символьная форма записи машинных команд",
        "correct": true
      }
    ]
  },
  {
    "question": "Мнемокод – это…",
    "answers": [
      {
        "text": "символическое обозначение команды/псевдокоманды",
        "correct": false
      },
      {
        "text": "имена регистров",
        "correct": false
      },
      {
        "text": "записанные в особой форме константы",
        "correct": false
      },
      {
        "text": "служебное слово, указывающее операцию, которая должна быть выполнена",
        "correct": true
      }
    ]
  },
  {
    "question": "Флаг – это…",
    "answers": [
      {
        "text": "бит, принимающий значение 1, если выполнено некоторое условие, и значение 0 в противном случае",
        "correct": true
      },
      {
        "text": "специальная ячейка памяти, расположенная непосредственно в процессоре",
        "correct": false
      },
      {
        "text": "область памяти, при работе с которой необходимо соблюдать определённые правила",
        "correct": false
      }
    ]
  },
  {
    "question": "Регистры – это…",
    "answers": [
      {
        "text": "бит, принимающий значение 1, если выполнено некоторое условие, и значение 0 в противном случае",
        "correct": false
      },
      {
        "text": "специальные ячейки памяти, расположенные непосредственно в процессоре",
        "correct": true
      },
      {
        "text": "область памяти, при работе с которой необходимо соблюдать определённые правила",
        "correct": false
      }
    ]
  },
  {
    "question": "Стек – это…",
    "answers": [
      {
        "text": "бит, принимающий значение 1, если выполнено некоторое условие, и значение 0 в противном случае",
        "correct": false
      },
      {
        "text": "специальные ячейки памяти, расположенные непосредственно в процессоре",
        "correct": false
      },
      {
        "text": "область памяти, при работе с которой необходимо соблюдать определённые правила",
        "correct": true
      }
    ]
  },
  {
    "question": "Вызов процедуры – это…",
    "answers": [
      {
        "text": "разбиение сложной программы на составные части, каждая из которых может подготавливаться отдельно",
        "correct": false
      },
      {
        "text": "записывает адрес следующей за ней команды в стек и осуществляет переход на первую команду указанной процедуры",
        "correct": false
      },
      {
        "text": "передача управления на первую команду процедуры",
        "correct": true
      }
    ]
  },
  {
    "question": "Адрес возврата – это…",
    "answers": [
      {
        "text": "адрес той команды, на которую процедура должна сделать переход по окончании своей работы",
        "correct": true
      },
      {
        "text": "специальные ячейки памяти, расположенные непосредственно в процессоре",
        "correct": false
      },
      {
        "text": "область памяти, при работе с которой необходимо соблюдать определённые правила",
        "correct": false
      }
    ]
  },
  {
    "question": "Метка – это…",
    "answers": [
      {
        "text": "символическое имя, вместо которого компилятор подставляет адрес",
        "correct": true
      },
      {
        "text": "специальные ячейки памяти, расположенные непосредственно в процессоре",
        "correct": false
      },
      {
        "text": "область памяти, при работе с которой необходимо соблюдать определённые правила",
        "correct": false
      },
      {
        "text": "бит, принимающий значение 1, если выполнено некоторое условие, и значение 0 в противном случае",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите правильный вариант перевода из десятичной системы счисления в двоичную, число 17:",
    "answers": [
      {
        "text": "10001",
        "correct": true
      },
      {
        "text": "11001",
        "correct": false
      },
      {
        "text": "11010",
        "correct": false
      }
    ]
  },
  {
    "question": "Какое десятичное число в двоичной системе счисления записывается как 1101?",
    "answers": [
      {
        "text": "17",
        "correct": false
      },
      {
        "text": "13",
        "correct": true
      },
      {
        "text": "26",
        "correct": false
      },
      {
        "text": "8",
        "correct": false
      }
    ]
  },
  {
    "question": "Как записывается в двоичной системе счисления число 15?",
    "answers": [
      {
        "text": "1111",
        "correct": true
      },
      {
        "text": "1010",
        "correct": false
      },
      {
        "text": "1110",
        "correct": false
      },
      {
        "text": "1000",
        "correct": false
      }
    ]
  },
  {
    "question": "Умножьте два числа в двоичной системе счисления 11011*101",
    "answers": [
      {
        "text": "10000111",
        "correct": true
      },
      {
        "text": "11111111",
        "correct": false
      },
      {
        "text": "11011101",
        "correct": false
      },
      {
        "text": "10011111",
        "correct": false
      }
    ]
  },
  {
    "question": "Перевести число 101,12 в десятичную систему счисления:",
    "answers": [
      {
        "text": "5,5",
        "correct": true
      },
      {
        "text": "6,5",
        "correct": false
      },
      {
        "text": "5,2",
        "correct": false
      },
      {
        "text": "6,2",
        "correct": false
      }
    ]
  },
  {
    "question": "Десятичная система относится к:",
    "answers": [
      {
        "text": "непозиционной системе",
        "correct": false
      },
      {
        "text": "позиционной систем",
        "correct": true
      },
      {
        "text": "другой вариант",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько единиц в двоичной записи десятичного числа 625?",
    "answers": [
      {
        "text": "1",
        "correct": false
      },
      {
        "text": "3",
        "correct": false
      },
      {
        "text": "5",
        "correct": true
      },
      {
        "text": "2",
        "correct": false
      }
    ]
  },
  {
    "question": "Переведите в двоичную систему десятичное число 57",
    "answers": [
      {
        "text": "101111",
        "correct": false
      },
      {
        "text": "11101",
        "correct": false
      },
      {
        "text": "111001",
        "correct": true
      },
      {
        "text": "1010111",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько нулей в двоичной записи десятичного числа 510?",
    "answers": [
      {
        "text": "1",
        "correct": true
      },
      {
        "text": "9",
        "correct": false
      },
      {
        "text": "10",
        "correct": false
      },
      {
        "text": "0",
        "correct": false
      }
    ]
  },
  {
    "question": "Программа на каком из языков программирования представляет собой совокупность блоков памяти, называемых сегментами памяти?",
    "answers": [
      {
        "text": "Ассемблер",
        "correct": true
      },
      {
        "text": "Паскаль",
        "correct": false
      },
      {
        "text": "Язык машинных команд",
        "correct": false
      },
      {
        "text": "Си",
        "correct": false
      }
    ]
  },
  {
    "question": "К сегментным регистрам относят",
    "answers": [
      {
        "text": "CS, DS, SS и ES.",
        "correct": true
      },
      {
        "text": "AX, BX, CX и DX",
        "correct": false
      },
      {
        "text": "SP и BP",
        "correct": false
      },
      {
        "text": "SI и DI",
        "correct": false
      }
    ]
  },
  {
    "question": "Интегрированная система программирования включает компонент для перевода исходного текста программы в машинный код, который называется",
    "answers": [
      {
        "text": "построителем кода",
        "correct": false
      },
      {
        "text": "компилятор",
        "correct": true
      },
      {
        "text": "переводчиком",
        "correct": false
      },
      {
        "text": "преобразователем",
        "correct": false
      }
    ]
  },
  {
    "question": "Загрузочный модуль программы – результат работы",
    "answers": [
      {
        "text": "Гамматики",
        "correct": false
      },
      {
        "text": "Транслятора",
        "correct": true
      },
      {
        "text": "Интерпретатора",
        "correct": false
      },
      {
        "text": "Редактора связей (компоновщика)",
        "correct": false
      }
    ]
  },
  {
    "question": "Этап проектирования задачи на ЭВМ, на котором создается математическая модель решения задачи, называется этапом …",
    "answers": [
      {
        "text": "формализации",
        "correct": true
      },
      {
        "text": "алгоритмизации",
        "correct": false
      },
      {
        "text": "программирования",
        "correct": false
      },
      {
        "text": "тестирования",
        "correct": false
      },
      {
        "text": "отладки",
        "correct": false
      }
    ]
  },
  {
    "question": "Ошибки, при решении задачи на ЭВМ, которые не обнаруживаются транслятором, – …",
    "answers": [
      {
        "text": "логические",
        "correct": true
      },
      {
        "text": "синтаксические",
        "correct": false
      },
      {
        "text": "динамические",
        "correct": false
      },
      {
        "text": "логические и синтаксические",
        "correct": false
      }
    ]
  },
  {
    "question": "Какое расширение имеют исходные тексты программ на ассемблере?",
    "answers": [
      {
        "text": "Pas",
        "correct": false
      },
      {
        "text": "Doc",
        "correct": false
      },
      {
        "text": "Obj",
        "correct": false
      },
      {
        "text": "Exe",
        "correct": false
      },
      {
        "text": "Asm",
        "correct": true
      }
    ]
  },
  {
    "question": "Виртуальные адреса являются результатом работы:",
    "answers": [
      {
        "text": "пользователя",
        "correct": false
      },
      {
        "text": "транслятора",
        "correct": true
      },
      {
        "text": "компоновщика",
        "correct": false
      },
      {
        "text": "ассемблера",
        "correct": false
      }
    ]
  },
  {
    "question": "Какого типа адреса могут быть одинаковыми в разных процессах:",
    "answers": [
      {
        "text": "виртуальные",
        "correct": true
      },
      {
        "text": "физические",
        "correct": false
      },
      {
        "text": "реальные",
        "correct": false
      },
      {
        "text": "сегментные",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой язык программирования представляет собою реализацию концепции процедурного программирования?",
    "answers": [
      {
        "text": "COBOL",
        "correct": false
      },
      {
        "text": "SQL",
        "correct": false
      },
      {
        "text": "FORTRAN",
        "correct": true
      },
      {
        "text": "JAVA",
        "correct": false
      }
    ]
  },
  {
    "question": "Ранжированная, или упорядоченная система абстракций - это …",
    "answers": [
      {
        "text": "модульность",
        "correct": false
      },
      {
        "text": "система ограничений",
        "correct": false
      },
      {
        "text": "иерархия",
        "correct": true
      },
      {
        "text": "полиморфизм",
        "correct": false
      }
    ]
  },
  {
    "question": "Инкапсуляция – …",
    "answers": [
      {
        "text": "скрытие деталей реализации; объединение данных и действий над ними",
        "correct": true
      },
      {
        "text": "позволяет создавать иерархию объектов, в которой объекты-потомки наследуют все свойства своих предков. Свойства при наследовании повторно не описываются. Кроме унаследованных, потомок обладает собственными свойствами. Объект в C++ может иметь сколько угодно потомков и предков",
        "correct": false
      },
      {
        "text": "возможность определения единого по имени действия, применимого ко всем объектам иерархии, причем каждый объект реализует это действие собственным способом",
        "correct": false
      }
    ]
  },
  {
    "question": "Наследование - …",
    "answers": [
      {
        "text": "скрытие деталей реализации; объединение данных и действий над ними",
        "correct": false
      },
      {
        "text": "позволяет создавать иерархию объектов, в которой объекты-потомки наследуют все свойства своих предков. Свойства при наследовании повторно не описываются. Кроме унаследованных, потомок обладает собственными свойствами. Объект в C++ может иметь сколько угодно потомков и предков",
        "correct": true
      },
      {
        "text": "возможность определения единого по имени действия, применимого ко всем объектам иерархии, причем каждый объект реализует это действие собственным способом",
        "correct": false
      }
    ]
  },
  {
    "question": "Полиморфизм - …",
    "answers": [
      {
        "text": "скрытие деталей реализации; объединение данных и действий над ними",
        "correct": false
      },
      {
        "text": "позволяет создавать иерархию объектов, в которой объекты-потомки наследуют все свойства своих предков. Свойства при наследовании повторно не описываются. Кроме унаследованных, потомок обладает собственными свойствами. Объект в C++ может иметь сколько угодно потомков и предков",
        "correct": false
      },
      {
        "text": "возможность определения единого по имени действия, применимого ко всем объектам иерархии, причем каждый объект реализует это действие собственным способом",
        "correct": true
      }
    ]
  },
  {
    "question": "Класс (объект) – …",
    "answers": [
      {
        "text": "скрытие деталей реализации; объединение данных и действий над ними",
        "correct": false
      },
      {
        "text": "позволяет создавать иерархию объектов, в которой объекты-потомки наследуют все свойства своих предков. Свойства при наследовании повторно не описываются. Кроме унаследованных, потомок обладает собственными свойствами. Объект в C++ может иметь сколько угодно потомков и предков",
        "correct": false
      },
      {
        "text": "возможность определения единого по имени действия, применимого ко всем объектам иерархии, причем каждый объект реализует это действие собственным способом",
        "correct": false
      },
      {
        "text": "инкапсулированная абстракция с четким протоколом доступа",
        "correct": true
      }
    ]
  },
  {
    "question": "Ядро операционной системы",
    "answers": [
      {
        "text": "aпрограммы, входящие в дистрибутив операционной системы;",
        "correct": false
      },
      {
        "text": "резидентная часть операционной системы",
        "correct": true
      },
      {
        "text": "основная программа, принимающая и обрабатывающая команды пользователя",
        "correct": false
      },
      {
        "text": "графическая оболочка, позволяющая выполнить операции с файлами и каталогами",
        "correct": false
      }
    ]
  },
  {
    "question": "Привилегированный режим работы программы",
    "answers": [
      {
        "text": "режим монопольного владения процессором на время работы программы",
        "correct": true
      },
      {
        "text": "режим, при котором программа в любой момент может монопольно завладеть процессором",
        "correct": false
      },
      {
        "text": "режим неограниченного доступа ко всем ресурсам компьютера",
        "correct": false
      },
      {
        "text": "режим, при котором программа имеет привилегии перед другими программами в условиях многозадачности",
        "correct": false
      }
    ]
  },
  {
    "question": "К основным функциям операционных систем относятся:",
    "answers": [
      {
        "text": "управление включением/выключением компьютера, управление памятью, управление файлами и каталогами, управление пользователями",
        "correct": false
      },
      {
        "text": "управление памятью, выполнение команд пользователя, управление файлами и каталогами",
        "correct": false
      },
      {
        "text": "управление процессами, управление памятью, управление периферийными устройствами",
        "correct": false
      },
      {
        "text": "управление устройствами, управление данными, управление памятью, управление процессами",
        "correct": true
      }
    ]
  },
  {
    "question": "Ресурс процесса",
    "answers": [
      {
        "text": "оперативная память и свободное место на диске",
        "correct": false
      },
      {
        "text": "файл, из которого или в который происходит ввод-вывод",
        "correct": false
      },
      {
        "text": "любой аппаратный или программный объект, который может понадобиться для работы процесса и доступ к которому может при этом вызвать конкуренцию процессов",
        "correct": true
      },
      {
        "text": "любой аппаратный или программный объект, который может понадобиться для работы процесса и работа с которым не вызывает конфликта с другими процессами",
        "correct": false
      }
    ]
  },
  {
    "question": "Дать определение невытесняющей многозадачности",
    "answers": [
      {
        "text": "режим многозадачности, при котором переключение процессов возможно в любой момент времени",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором переключение процессов возможно через определенные кванты времени",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором переключение процессов выполняется поочередно в порядке их приоритетов",
        "correct": false
      },
      {
        "text": "режим, при котором переключение процессов возможно только, когда работающий процесс вызовет системную функцию",
        "correct": true
      }
    ]
  },
  {
    "question": "Дать определение вытесняющей многозадачности",
    "answers": [
      {
        "text": "режим многозадачности, при котором переключение процессов возможно в любой момент времени",
        "correct": false
      },
      {
        "text": "режим, при котором переключение процессов возможно только, когда работающий процесс вызовет системную функцию",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором каждый новый процесс монопольно занимает процессорное время, а состояние остальных процессов записывается в файл подкачки",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором переключение процессов происходит через определенные кванты времени соответственно приоритетам",
        "correct": true
      }
    ]
  },
  {
    "question": "Дистрибутив операционной системы включает:",
    "answers": [
      {
        "text": "операционную систему, программу ее установки и настройки, сопровождение и регулярное обновление",
        "correct": true
      },
      {
        "text": "только операционную систему и программу ее установки",
        "correct": false
      },
      {
        "text": "операционную систему, программу ее установки и наиболее популярные прикладные программы",
        "correct": false
      },
      {
        "text": "операционную систему, программу ее установки и наиболее популярные системные утилиты от сторонних разработчиков",
        "correct": false
      }
    ]
  },
  {
    "question": "ОС распространяется по лицензии:",
    "answers": [
      {
        "text": "GNU",
        "correct": true
      },
      {
        "text": "Линуса Торвальдса",
        "correct": false
      },
      {
        "text": "фирмы Microsoft",
        "correct": false
      },
      {
        "text": "компании GNU",
        "correct": false
      }
    ]
  },
  {
    "question": "При установке ОС Linux рекомендуется выбрать файловую систему:",
    "answers": [
      {
        "text": "FAT16 либо FAT32",
        "correct": false
      },
      {
        "text": "NTFS",
        "correct": false
      },
      {
        "text": "journalized ext3 FS",
        "correct": true
      },
      {
        "text": "любую из перечисленных",
        "correct": false
      }
    ]
  },
  {
    "question": "Жесткая ссылка на файл в ОС Linux:",
    "answers": [
      {
        "text": "вляется дополнительным ярлыком для файла",
        "correct": false
      },
      {
        "text": "представляет собой другое имя файла",
        "correct": true
      },
      {
        "text": "это указатель на начало файла",
        "correct": false
      },
      {
        "text": "структура, содержащая сведения о расположении и размере файла",
        "correct": false
      }
    ]
  },
  {
    "question": "Список пользователей системы хранится в файле",
    "answers": [
      {
        "text": "/etc/users",
        "correct": false
      },
      {
        "text": "/etc/passwd",
        "correct": true
      },
      {
        "text": "/root/passwd",
        "correct": false
      },
      {
        "text": "/system/passwd",
        "correct": false
      }
    ]
  },
  {
    "question": "Конвейером называют:",
    "answers": [
      {
        "text": "параллельное выполнение нескольких команд, причем переключение между ними производится в строгой очередности",
        "correct": false
      },
      {
        "text": "параллельное выполнение нескольких команд, при этом вывод одной команды перенаправляется на стандартный ввод следующей",
        "correct": true
      },
      {
        "text": "последовательное выполнение нескольких команд, причем каждая следующая команда начинает выполняться после завершения предыдущей",
        "correct": false
      },
      {
        "text": "последовательное выполнение нескольких команд",
        "correct": false
      }
    ]
  },
  {
    "question": "Пакет с программным обеспечением в Linux содержит:",
    "answers": [
      {
        "text": "собранную программу, сценарии действий до установки и после нее, информацию о зависимостях от других пакетов",
        "correct": true
      },
      {
        "text": "собранную программу, сценарии действий до установки и после нее",
        "correct": false
      },
      {
        "text": "собранную программу, информацию о зависимостях от других пакетов, программу-установщик setup либо install",
        "correct": false
      },
      {
        "text": "собранную программу и программу-установщик setup либо install",
        "correct": false
      }
    ]
  },
  {
    "question": "Командная оболочка операционной системы :",
    "answers": [
      {
        "text": "программа, которая преобразует команды пользователя в действия операционной системы",
        "correct": true
      },
      {
        "text": "программа, которая выполняет команды пользователя",
        "correct": false
      },
      {
        "text": "часть операционной системы, котороая выполняет команды пользователя",
        "correct": false
      }
    ]
  },
  {
    "question": "Команда ls :",
    "answers": [
      {
        "text": "выводит на экран список файлов текущего каталога",
        "correct": false
      },
      {
        "text": "делает заданный каталог текущим и выводит список файлов",
        "correct": false
      },
      {
        "text": "выполняет переход в заданный каталог",
        "correct": false
      },
      {
        "text": "выводит на экран список файлов каталога, заданного в командной строке либо текущего",
        "correct": true
      }
    ]
  },
  {
    "question": "Для копирования файлов в ОС Linux используется команда",
    "answers": [
      {
        "text": "mkfile",
        "correct": false
      },
      {
        "text": "copy",
        "correct": false
      },
      {
        "text": "cp",
        "correct": true
      }
    ]
  },
  {
    "question": "Файловый менеджер :",
    "answers": [
      {
        "text": "программа для создания, удаления, копирования файлов",
        "correct": false
      },
      {
        "text": "программа для перемещения по каталогам",
        "correct": false
      },
      {
        "text": "программа управления атрибутами и редактирования файлов",
        "correct": false
      },
      {
        "text": "программа, выполняющая все перечисленные функции",
        "correct": true
      }
    ]
  },
  {
    "question": "Для завершения работы системы в ОС Linux используется команда :",
    "answers": [
      {
        "text": "logout",
        "correct": false
      },
      {
        "text": "shutdown",
        "correct": true
      },
      {
        "text": "exit",
        "correct": false
      },
      {
        "text": "quit",
        "correct": false
      }
    ]
  },
  {
    "question": "Для установки программы в ОС Linux необходимо :",
    "answers": [
      {
        "text": "выполнить команду setup",
        "correct": false
      },
      {
        "text": "запустить менеджер пакетов и выбрать пакет с устанавливаемой программой",
        "correct": true
      },
      {
        "text": "распаковать пакет, содержащий программу",
        "correct": false
      },
      {
        "text": "скопировать пакет, содержащий программу, в отдельный каталог",
        "correct": false
      }
    ]
  },
  {
    "question": "Права доступа к файлу определяются :",
    "answers": [
      {
        "text": "с помощью 9 символов или трехзначного шестнадцатеричного числа",
        "correct": false
      },
      {
        "text": "с помощью 3 символов или трехзначного восьмеричного числа",
        "correct": false
      },
      {
        "text": "с помощью 9 символов или трехзначного восьмеричного числа",
        "correct": true
      },
      {
        "text": "с помощью 9 символов",
        "correct": false
      }
    ]
  },
  {
    "question": "Атрибуты прав доступа к файлу включают :",
    "answers": [
      {
        "text": "разграничение доступа для владельца, членов его группы и остальных пользователей",
        "correct": true
      },
      {
        "text": "разграничение прав доступа для владельца и остальных пользователей",
        "correct": false
      },
      {
        "text": "доступ «только для чтения» для всех, кроме владельца файла",
        "correct": false
      },
      {
        "text": "доступ с правами администратора или пользователя",
        "correct": false
      }
    ]
  },
  {
    "question": "Конфигурационные файлы в ОС Linux хранятся преимущественно",
    "answers": [
      {
        "text": "в зашифрованном виде, недоступном для просмотра",
        "correct": false
      },
      {
        "text": "в зашифрованном виде, просмотр – с помощью программы-конфигуратора",
        "correct": false
      },
      {
        "text": "в текстовом формате, просмотр и редактирование – только с помощью редактора vi",
        "correct": false
      },
      {
        "text": "в текстовом формате, просмотр и редактирование – любым текстовым редактором",
        "correct": true
      }
    ]
  },
  {
    "question": "При страничной организации виртуальной памяти:",
    "answers": [
      {
        "text": "все страницы имеют одинаковые размеры, а разбиение виртуального адресного пространства процесса на страницы выполняется системой автоматически",
        "correct": true
      },
      {
        "text": "размер страниц выбирается операционной системой в зависимости от объема свободной оперативной памяти",
        "correct": false
      },
      {
        "text": "размер страниц определяется программой при ее запуске",
        "correct": false
      },
      {
        "text": "страницы имеют одинаковый размер, количество страниц определяется программой при ее запуске",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите правильные утверждения для многопроцессорных операционных систем",
    "answers": [
      {
        "text": "Асимметричная ОС целиком выполняется только на одном из процессоров компьютера, распределяя прикладные задачи по остальным процессорам",
        "correct": true
      },
      {
        "text": "Симметричная ОС полностью децентрализована и использует все процессоры, разделяя их между системными и прикладными задачами",
        "correct": true
      },
      {
        "text": "Асимметричная ОС выполняется на нескольких процессорах компьютера",
        "correct": false
      },
      {
        "text": "В симметричной ОС процессоры одна половина процессоров отводится для системных задач, вторая – для прикладных",
        "correct": false
      }
    ]
  },
  {
    "question": "Пользователь root — это",
    "answers": [
      {
        "text": "единственная учётная запись, принадлежащая администратору системы",
        "correct": true
      },
      {
        "text": "учётная запись, гарантированно дающая пользователю исключительные права работы в системе",
        "correct": false
      },
      {
        "text": "учётная запись, которую рекомендуется использовать администратору системы, даже если у него имеется персональная учётная запись",
        "correct": false
      }
    ]
  },
  {
    "question": "Лицензия на программное обеспечение нужна, чтобы",
    "answers": [
      {
        "text": "указать, кто является обладателем всех прав на это программное обеспечение",
        "correct": false
      },
      {
        "text": "определить круг прав пользователя по отношению к этому программному обеспечению",
        "correct": true
      },
      {
        "text": "определить, на каких условиях можно продавать данное программное обеспечение",
        "correct": false
      },
      {
        "text": "сделать данное программное обеспечение свободным",
        "correct": false
      }
    ]
  },
  {
    "question": "Основное средство взаимодействия пользователя и ОС Linux",
    "answers": [
      {
        "text": "Любое устройство ввода-вывода",
        "correct": false
      },
      {
        "text": "Любой терминал",
        "correct": true
      },
      {
        "text": "Виртуальная консоль",
        "correct": false
      },
      {
        "text": "Клавиатура, мышь, монитор",
        "correct": false
      }
    ]
  },
  {
    "question": "Простейшая командная строка состоит из",
    "answers": [
      {
        "text": "Команды и её параметров (не менее одного)",
        "correct": false
      },
      {
        "text": "Одной команды",
        "correct": true
      },
      {
        "text": "Приглашения и команды",
        "correct": false
      },
      {
        "text": "Приглашения, команды и её параметров (не менее одного)",
        "correct": false
      }
    ]
  },
  {
    "question": "Терминал — это",
    "answers": [
      {
        "text": "Любое устройство ввода-вывода",
        "correct": false
      },
      {
        "text": "Устройство ввода-вывода текстовой информации",
        "correct": false
      },
      {
        "text": "Устройство ввода-вывода текстовой информации, особым образом интерпретирующее часть передаваемых символов",
        "correct": true
      },
      {
        "text": "Устройство ввода-вывода текстовой информации, особым образом интерпретирующее часть передаваемых символов и оснащённое клавиатурой, монитором и мышью",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая из перечисленных команд не имеет отношения к справочной подсистеме Linux?",
    "answers": [
      {
        "text": "man",
        "correct": false
      },
      {
        "text": "info",
        "correct": false
      },
      {
        "text": "whatis",
        "correct": false
      },
      {
        "text": "showhelp",
        "correct": true
      }
    ]
  },
  {
    "question": "Основная информация о системе содержится",
    "answers": [
      {
        "text": "В файлах вида «README» и «HOWTO»",
        "correct": false
      },
      {
        "text": "В справочных подсистемах help и apropos",
        "correct": false
      },
      {
        "text": "В справочных подсистемах man и info",
        "correct": true
      }
    ]
  },
  {
    "question": "Запуском исполняемых программ в Linux занимается",
    "answers": [
      {
        "text": "Сам пользователь, при помощи терминала",
        "correct": false
      },
      {
        "text": "Программа-загрузчик, вследствие команды от shell или системы",
        "correct": false
      },
      {
        "text": "Система, под воздействием управляющих символов",
        "correct": false
      },
      {
        "text": "Интерпретатор командной строки, на основе разбора команды пользователя",
        "correct": true
      }
    ]
  },
  {
    "question": "Управляющие символы — это",
    "answers": [
      {
        "text": "Клавиши Ctrl и Alt на клавиатуре",
        "correct": false
      },
      {
        "text": "Символы, вводимые сочетанием любой клавиши с клавиатурным модификатором",
        "correct": false
      },
      {
        "text": "Символы, специальным образом интерпретируемые терминалом (как команды, а не как текст)",
        "correct": true
      },
      {
        "text": "Символы пробела и конца строки",
        "correct": false
      }
    ]
  },
  {
    "question": "Управляющая последовательность — это",
    "answers": [
      {
        "text": "последовательность клавиш, начинающаяся с клавиатурного модификатора (например, Ctrl или Alt)",
        "correct": false
      },
      {
        "text": "последовательность символов определённой длины, начинающаяся с управляющего символа и интерпретируемая системой как команда, введённая с терминала",
        "correct": false
      },
      {
        "text": "последовательность символов определённой длины, начинающаяся с управляющего символа и интерпретируемая терминалом как команда",
        "correct": true
      },
      {
        "text": "последовательность символов любой длины, начинающаяся с управляющего символа “^[” и заканчивающаяся переводом строки",
        "correct": false
      }
    ]
  },
  {
    "question": "Запись program(5) обозначает",
    "answers": [
      {
        "text": "пятую версию программы program",
        "correct": false
      },
      {
        "text": "программу program, вызванную с пятью параметрами",
        "correct": false
      },
      {
        "text": "страницу руководства по пятой версии программы program",
        "correct": false
      },
      {
        "text": "страницу руководства по программе program, относящуюся к пятому разделу системы руководств",
        "correct": true
      }
    ]
  },
  {
    "question": "Чего не делает комплекс программ называемых операционной системой?",
    "answers": [
      {
        "text": "обеспечивает управление аппаратными средствами компьютера",
        "correct": false
      },
      {
        "text": "организует работу с файлами",
        "correct": false
      },
      {
        "text": "загружает BIOS",
        "correct": true
      }
    ]
  },
  {
    "question": "Как называется комплекс программ, который обеспечивает управление аппаратными средствами компьютера, организует работу с файлами,  реализует взаимодействие с пользователем?",
    "answers": [
      {
        "text": "BIOS",
        "correct": false
      },
      {
        "text": "операционная система",
        "correct": true
      },
      {
        "text": "графическая оболочка",
        "correct": false
      }
    ]
  },
  {
    "question": "В конце 70-х годов прошлого столетия сотрудники Калифорнийского университета в Беркли внесли ряд усовершенствований в исходные коды UNIX. Разработка стала известна под именем BSD. Какие это были усовершенствования?",
    "answers": [
      {
        "text": "появление графического интерфейса",
        "correct": false
      },
      {
        "text": "работа с протоколами семейства TCP/IP",
        "correct": true
      },
      {
        "text": "появление многопользовательской среды",
        "correct": false
      }
    ]
  },
  {
    "question": "В конце 70-х годов прошлого столетия сотрудники Калифорнийского университета в Беркли внесли ряд усовершенствований в исходные коды UNIX. Как стала называется эта разработка?",
    "answers": [
      {
        "text": "Linux",
        "correct": false
      },
      {
        "text": "Windows",
        "correct": false
      },
      {
        "text": "BSD",
        "correct": true
      }
    ]
  },
  {
    "question": "Что появилось в BSD и отсутствовало в UNIX?",
    "answers": [
      {
        "text": "появление графического интерфейса",
        "correct": false
      },
      {
        "text": "работа с протоколами семейства TCP/IP",
        "correct": true
      },
      {
        "text": "появление многопользовательской среды",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие операционные системы относятся к операционным системам типа UNIX?",
    "answers": [
      {
        "text": "Windows",
        "correct": false
      },
      {
        "text": "Linux",
        "correct": true
      },
      {
        "text": "BSD",
        "correct": true
      },
      {
        "text": "OS/2",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие операционные системы не относятся к операционным системам типа UNIX?",
    "answers": [
      {
        "text": "Linux",
        "correct": false
      },
      {
        "text": "Windows",
        "correct": true
      },
      {
        "text": "OS/2",
        "correct": true
      },
      {
        "text": "BSD",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие  операционные системы основаны на Unix?",
    "answers": [
      {
        "text": "Vista",
        "correct": false
      },
      {
        "text": "GNU/Linux",
        "correct": true
      },
      {
        "text": "BSD",
        "correct": false
      }
    ]
  },
  {
    "question": "Известно то, что разрабатываемое в рамках проекта GNU программное обеспечение свободно. Что это означает?",
    "answers": [
      {
        "text": "программное обеспечение распространяется без лицензии",
        "correct": false
      },
      {
        "text": "программное обеспечение никак не защищено в юридическом смысле",
        "correct": false
      },
      {
        "text": "программное обеспечение распространяется на условиях лицензии General Public License(GPL)",
        "correct": true
      }
    ]
  },
  {
    "question": "Что соответствует свободно распространяемому программному обеспечению, разрабатываемому в рамках проекта GNU?",
    "answers": [
      {
        "text": "программное обеспечение распространяется без лицензии",
        "correct": false
      },
      {
        "text": "программное обеспечение распространяется на условиях лицензии General Public License(GPL)",
        "correct": true
      },
      {
        "text": "программное обеспечение никак не защищено в юридическом смысле",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие из приведенных ниже утверждений являются верными?",
    "answers": [
      {
        "text": "GNU программное обеспечение распространяется без лицензии",
        "correct": false
      },
      {
        "text": "GNU - это проект создания свободного программного обеспечения, разрабатываемое в рамках проекта",
        "correct": true
      },
      {
        "text": "разрабатываемое в рамках проекта GNU программное обеспечение распространяется на условиях лицензии GPL",
        "correct": true
      }
    ]
  },
  {
    "question": "Какие из приведенных ниже утверждений являются верными?",
    "answers": [
      {
        "text": "Linux лежит в основе всех операционных систем типа UNIX",
        "correct": false
      },
      {
        "text": "исходные коды Linux распространяются свободно и общедоступны",
        "correct": true
      },
      {
        "text": "Linux - это версия Microsoft Windows",
        "correct": false
      }
    ]
  },
  {
    "question": "Что будет делать ОС Linux, если оперативная память полностью исчерпана?",
    "answers": [
      {
        "text": "Ничего",
        "correct": false
      },
      {
        "text": "будет искать давно не использованные страницы памяти для их перемещения из памяти на жесткий диск",
        "correct": true
      },
      {
        "text": "ВСЕ страницы памяти, относящиеся к неработающему в данный момент приложению, сохраняются на диске",
        "correct": false
      }
    ]
  },
  {
    "question": "В каком случае ОС Linux переместит страницы памяти из памяти на жесткий диск?",
    "answers": [
      {
        "text": "если страницы созданы администратором",
        "correct": false
      },
      {
        "text": "если оперативная память полностью исчерпана",
        "correct": true
      },
      {
        "text": "ВСЕ страницы памяти, относятся к неработающему в данный момент приложению",
        "correct": false
      }
    ]
  },
  {
    "question": "Что произойдет если под управлением ОС Linux  системе или процессу пользователя требуется больше памяти?",
    "answers": [
      {
        "text": "память, зарезервированная под кеш, увеличивается",
        "correct": false
      },
      {
        "text": "память, зарезервированная под кеш, уменьшается",
        "correct": true
      },
      {
        "text": "память, зарезервированная под кеш, не изменяется",
        "correct": false
      }
    ]
  },
  {
    "question": "Что произойдет если под управлением ОС Linux память не используется?",
    "answers": [
      {
        "text": "память, зарезервированная под кеш, уменьшается",
        "correct": false
      },
      {
        "text": "память, зарезервированная под кеш, увеличивается",
        "correct": true
      },
      {
        "text": "память, зарезервированная под кеш, не изменяется",
        "correct": false
      }
    ]
  },
  {
    "question": "Какое действие со стороны ОС Linux  существенно ускоряет доступ к часто используемым программам и задачам?",
    "answers": [
      {
        "text": "загрузка SmartDrive",
        "correct": false
      },
      {
        "text": "увеличение памяти, зарезервированной под кеш",
        "correct": true
      },
      {
        "text": "уменьшение памяти, зарезервированной под кеш",
        "correct": false
      }
    ]
  },
  {
    "question": "Что представляла собой разработка Линуса Торвальдса?",
    "answers": [
      {
        "text": "набор утилит",
        "correct": false
      },
      {
        "text": "операционную систему LINUX",
        "correct": false
      },
      {
        "text": "только ядро операционной системы",
        "correct": true
      }
    ]
  },
  {
    "question": "Кто разработал ядро Linux?",
    "answers": [
      {
        "text": "группа разработчиков по всему миру",
        "correct": false
      },
      {
        "text": "Линус Торвальдс",
        "correct": true
      },
      {
        "text": "у Linux нет ядра",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая из перечисленных команд не имеет отношения к справочной подсистеме Linux?",
    "answers": [
      {
        "text": "man",
        "correct": false
      },
      {
        "text": "whatis",
        "correct": false
      },
      {
        "text": "info",
        "correct": false
      },
      {
        "text": "showhelp",
        "correct": true
      }
    ]
  },
  {
    "question": "Могут ли в Linux существовать устройства, доступные на запись любому пользователю?",
    "answers": [
      {
        "text": "Обычно нет, но суперпользователь может вручную сменить права доступа",
        "correct": false
      },
      {
        "text": "Это запрещено",
        "correct": false
      },
      {
        "text": "Устройств, доступных на запись всем пользователям одновременно, не существует, однако права доступа к целой группе устройств передаются любому пользователю, зарегистрированному в системе первым",
        "correct": false
      },
      {
        "text": "Такие устройства существуют всегда",
        "correct": true
      }
    ]
  },
  {
    "question": "Большинство фильтров Linux работают с",
    "answers": [
      {
        "text": "Файлами любого заранее описанного формата",
        "correct": false
      },
      {
        "text": "Файлами, разбитыми на строки, каждая из которых может разделяться на поля",
        "correct": true
      },
      {
        "text": "Файлами, поделёнными на строки равной длины",
        "correct": false
      },
      {
        "text": "Файлами, разбитыми на записи при помощи разделителей",
        "correct": false
      }
    ]
  },
  {
    "question": "В какой кодировке могут быть записаны русские имена файлов в Linux:",
    "answers": [
      {
        "text": "в любой кодировке, подходящей для записи русских имён",
        "correct": true
      },
      {
        "text": "CP-1251",
        "correct": false
      },
      {
        "text": "KOI8-R",
        "correct": false
      },
      {
        "text": "CP-866",
        "correct": false
      }
    ]
  },
  {
    "question": "Пользователь может получить список содержащихся в каталоге dir файлов и просмотреть их содержимое, но не может создать или удалить файл в каталоге dir. Каков режим доступа к этому каталогу?",
    "answers": [
      {
        "text": "доступен только на чтение и запись",
        "correct": false
      },
      {
        "text": "доступен только на чтение",
        "correct": false
      },
      {
        "text": "доступен только на использование",
        "correct": false
      },
      {
        "text": "доступен только на чтение и использование",
        "correct": true
      }
    ]
  },
  {
    "question": "В файловой системе Linux",
    "answers": [
      {
        "text": "не более двух корневых каталогов",
        "correct": false
      },
      {
        "text": "не более 15 корневых каталогов",
        "correct": false
      },
      {
        "text": "по одному корневому каталогу на каждый диск",
        "correct": false
      },
      {
        "text": "один корневой каталог",
        "correct": true
      }
    ]
  },
  {
    "question": "Запуском исполняемых программ в Linux занимается",
    "answers": [
      {
        "text": "Сам пользователь, при помощи терминала",
        "correct": false
      },
      {
        "text": "Интерпретатор командной строки, на основе разбора команды пользователя",
        "correct": true
      },
      {
        "text": "Программа-загрузчик, вследствие команды от shell или системы",
        "correct": false
      },
      {
        "text": "Система, под воздействием управляющих символов",
        "correct": false
      }
    ]
  },
  {
    "question": "Команда tr предназначена для",
    "answers": [
      {
        "text": "Изменения порядка полей в потоке данных",
        "correct": false
      },
      {
        "text": "Замены одних символов в потоке данных на другие",
        "correct": true
      },
      {
        "text": "Перевода с одного естественного языка на другой",
        "correct": false
      },
      {
        "text": "Трансляции командных сценариев",
        "correct": false
      }
    ]
  },
  {
    "question": "Что будет ядром операционной системы?",
    "answers": [
      {
        "text": "программы, входящие в дистрибутив операционной системы",
        "correct": false
      },
      {
        "text": "резидентная часть операционной системы",
        "correct": true
      },
      {
        "text": "основная программа, принимающая и обрабатывающая команды пользователя",
        "correct": false
      },
      {
        "text": "графическая оболочка, позволяющая выполнить операции с файлами и каталогами",
        "correct": false
      }
    ]
  },
  {
    "question": "Что такое привилегированный режим работы программы?",
    "answers": [
      {
        "text": "режим монопольного владения процессором на время работы программы",
        "correct": true
      },
      {
        "text": "режим, при котором программа в любой момент может монопольно завладеть",
        "correct": false
      },
      {
        "text": "процессором;",
        "correct": false
      },
      {
        "text": "режим неограниченного доступа ко всем ресурсам компьютера",
        "correct": false
      },
      {
        "text": "режим, при котором программа имеет привилегии перед другими программами в условиях многозадачности",
        "correct": false
      }
    ]
  },
  {
    "question": "Основные функции операционных систем:",
    "answers": [
      {
        "text": "управление включением/выключением компьютера, управление памятью, управление файлами и каталогами, управление пользователями",
        "correct": false
      },
      {
        "text": "управление памятью, выполнение команд пользователя, управление файлами и каталогами",
        "correct": false
      },
      {
        "text": "управление процессами, управление памятью, управление периферийными устройствами",
        "correct": false
      },
      {
        "text": "управление устройствами, управление данными, управление памятью, управление процессами",
        "correct": true
      }
    ]
  },
  {
    "question": "Что такое ресурс процесса?",
    "answers": [
      {
        "text": "оперативная память и свободное место на диске",
        "correct": false
      },
      {
        "text": "файл, из которого или в который происходит ввод-вывод",
        "correct": false
      },
      {
        "text": "любой аппаратный или программный объект, который может понадобиться для работы процесса и доступ к которому может при этом вызвать конкуренцию процессов",
        "correct": true
      },
      {
        "text": "любой аппаратный или программный объект, который может понадобиться для работы процесса и работа с которым не вызывает конфликта с другими процессами",
        "correct": false
      }
    ]
  },
  {
    "question": "Невытесняющая многозадачность — …",
    "answers": [
      {
        "text": "режим многозадачности, при котором переключение процессов возможно в любой момент времени",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором переключение процессов возможно через определенные кванты времени",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором переключение процессов выполняется поочередно в порядке их приоритетов",
        "correct": false
      },
      {
        "text": "режим, при котором переключение процессов возможно только, когда работающий процесс вызовет системную функцию",
        "correct": true
      }
    ]
  },
  {
    "question": "Вытесняющая многозадачность — …",
    "answers": [
      {
        "text": "режим многозадачности, при котором переключение процессов возможно в любой момент времени",
        "correct": false
      },
      {
        "text": "режим, при котором переключение процессов возможно только, когда работающий процесс вызовет системную функцию",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором каждый новый процесс монопольно занимает процессорное время, а состояние остальных процессов записывается в файл подкачки",
        "correct": false
      },
      {
        "text": "режим многозадачности, при котором переключение процессов происходит через определенные кванты времени соответственно приоритетам",
        "correct": true
      }
    ]
  },
  {
    "question": "Что входит в дистрибутив операционной системы:",
    "answers": [
      {
        "text": "операционную систему, программу ее установки и настройки, сопровождение и регулярное обновление",
        "correct": true
      },
      {
        "text": "только операционную систему и программу ее установки",
        "correct": false
      },
      {
        "text": "операционную систему, программу ее установки и наиболее популярные прикладные программы",
        "correct": false
      },
      {
        "text": "операционную систему, программу ее установки и наиболее популярные системные утилиты от сторонних разработчиков",
        "correct": false
      }
    ]
  },
  {
    "question": "Что присуще жесткой ссылке на файл в ОС Linux",
    "answers": [
      {
        "text": "является дополнительным ярлыком для файла",
        "correct": false
      },
      {
        "text": "представляет собой другое имя файла",
        "correct": true
      },
      {
        "text": "это указатель на начало файла",
        "correct": false
      },
      {
        "text": "структура, содержащая сведения о расположении и размере файла",
        "correct": false
      }
    ]
  },
  {
    "question": "Что называют конвейером?",
    "answers": [
      {
        "text": "параллельное выполнение нескольких команд, причем переключение между ними производится в строгой очередности",
        "correct": false
      },
      {
        "text": "параллельное выполнение нескольких команд, при этом вывод одной команды перенаправляется на стандартный ввод следующей",
        "correct": true
      },
      {
        "text": "последовательное выполнение нескольких команд, причем каждая следующая команда начинает выполняться после завершения предыдущей",
        "correct": false
      },
      {
        "text": "последовательное выполнение нескольких команд",
        "correct": false
      }
    ]
  },
  {
    "question": "Что такое командная оболочка операционной системы?",
    "answers": [
      {
        "text": "программа, которая преобразует команды пользователя в действия операционной системы",
        "correct": true
      },
      {
        "text": "программа, которая выполняет команды пользователя",
        "correct": false
      },
      {
        "text": "часть операционной системы, котороая выполняет команды пользователя",
        "correct": false
      }
    ]
  },
  {
    "question": "Какую функцию выполняет команда ls?",
    "answers": [
      {
        "text": "выводит на экран список файлов текущего каталога",
        "correct": false
      },
      {
        "text": "делает заданный каталог текущим и выводит список файлов",
        "correct": false
      },
      {
        "text": "выполняет переход в заданный каталог",
        "correct": false
      },
      {
        "text": "выводит на экран список файлов каталога, заданного в командной строке либо текущего",
        "correct": true
      }
    ]
  },
  {
    "question": "Какую команду применяют с целью копирования файлов в ОС Linux?",
    "answers": [
      {
        "text": "mkfile",
        "correct": false
      },
      {
        "text": "copy",
        "correct": false
      },
      {
        "text": "cp",
        "correct": true
      }
    ]
  },
  {
    "question": "Что такое файловый менеджер?",
    "answers": [
      {
        "text": "программа для создания, удаления, копирования файлов",
        "correct": false
      },
      {
        "text": "программа для перемещения по каталогам",
        "correct": false
      },
      {
        "text": "программа управления атрибутами и редактирования файлов",
        "correct": false
      },
      {
        "text": "программа, выполняющая все перечисленные функции",
        "correct": true
      }
    ]
  },
  {
    "question": "Какую команду применяют с целью завершения работы системы в ОС Linux?",
    "answers": [
      {
        "text": "logout",
        "correct": false
      },
      {
        "text": "shutdown",
        "correct": true
      },
      {
        "text": "exit",
        "correct": false
      },
      {
        "text": "quit",
        "correct": false
      }
    ]
  },
  {
    "question": "Где происходит преимущественное хранение конфигурационных файлов в ОС Linux?",
    "answers": [
      {
        "text": "в зашифрованном виде, недоступном для просмотра",
        "correct": false
      },
      {
        "text": "в зашифрованном виде, просмотр – с помощью программы-конфигуратора",
        "correct": false
      },
      {
        "text": "в текстовом формате, просмотр и редактирование – только с помощью редактора vi",
        "correct": false
      },
      {
        "text": "в текстовом формате, просмотр и редактирование – любым текстовым редактором",
        "correct": true
      }
    ]
  },
  {
    "question": "Выберите все подходящие ответы из списка",
    "answers": [
      {
        "text": "Язык С++ является одним из самых быстрых языков программирования в мире",
        "correct": true
      },
      {
        "text": "Все языки программирования транслируются в ассемблерный код",
        "correct": false
      },
      {
        "text": "В языке С++ все компиляторы работают одинаково",
        "correct": false
      },
      {
        "text": "Python - не язык программирования",
        "correct": false
      },
      {
        "text": "Все программисты должны уметь писать код на язык ассемблер",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите один вариант из списка _____ ссылаются на имена переменных, функций, массивов, классов и т.д., созданные программистом.",
    "answers": [
      {
        "text": "Ключевые слова",
        "correct": false
      },
      {
        "text": "Идентификаторы",
        "correct": true
      },
      {
        "text": "Ограничения",
        "correct": false
      },
      {
        "text": "Строки",
        "correct": false
      }
    ]
  },
  {
    "question": "Что такое ASCII?",
    "answers": [
      {
        "text": "Кодированные символы для использования в ЯП",
        "correct": false
      },
      {
        "text": "Стандарт работы с текстом и символами",
        "correct": false
      },
      {
        "text": "Таблица кодированных символов",
        "correct": true
      },
      {
        "text": "Таблицы кодов",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите правильные утверждения",
    "answers": [
      {
        "text": "Языки программирования - вынужденная необходимость человечества для понимания Искусственного интеллекта",
        "correct": false
      },
      {
        "text": "Концепции языков программирования сложны для понимания человеку",
        "correct": false
      },
      {
        "text": "Первый язык программирования был написан компьютером",
        "correct": false
      },
      {
        "text": "Языки программирования делятся на высокоуровневые и низкоуровневые",
        "correct": true
      },
      {
        "text": "Языки программирования необходимы для представления алгоритмов ''Компьютеру''",
        "correct": true
      },
      {
        "text": "Логика - необходимый элемент при написании любой программы",
        "correct": true
      }
    ]
  },
  {
    "question": "Выберите правильные утверждения",
    "answers": [
      {
        "text": "Интерпретация выполняет код строчка за строчкой почти без дополнительных действий",
        "correct": true
      },
      {
        "text": "Интерпретация создаёт отдельную программу, которая может быть запущена на устройстве",
        "correct": false
      },
      {
        "text": "Компиляция выполняет код строчка за строчкой почти без дополнительных действий",
        "correct": false
      },
      {
        "text": "Я транслятор",
        "correct": false
      },
      {
        "text": "Компиляция создаёт отдельную программу, которая может быть запущена на устройстве",
        "correct": true
      }
    ]
  },
  {
    "question": "C++ носил имя _____ до того, как оно было изменено на C++.",
    "answers": [
      {
        "text": "C with classes",
        "correct": true
      },
      {
        "text": "Improved C",
        "correct": false
      },
      {
        "text": "Integrated C",
        "correct": false
      },
      {
        "text": "C with Simula",
        "correct": false
      }
    ]
  },
  {
    "question": "C ++ - это __________ язык программирования",
    "answers": [
      {
        "text": "объектно-ориентированный, универсальный и модульный",
        "correct": false
      },
      {
        "text": "все перечисленное",
        "correct": true
      },
      {
        "text": "процедурный и функциональный",
        "correct": false
      },
      {
        "text": "общего назначения",
        "correct": false
      }
    ]
  },
  {
    "question": "C ++ появился под влиянием",
    "answers": [
      {
        "text": "C ++ был разработан как замена всем перечисленным языкам",
        "correct": true
      },
      {
        "text": "Modula-2 и Simula",
        "correct": false
      },
      {
        "text": "C",
        "correct": false
      },
      {
        "text": "Ада и АЛГОЛ",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая из перечисленных ниже программ на C ++ подходит для вывода в консоль строки \"Hello World\"? 1) #include<iostream> using namespace std; int main() { cout<<\"Hello World\"; return 0; } 2) #include<iostream> int main() { std::cout<<\"Hello World\"; return 0; } 3)#include<iostream> using namespace std; void codescracker(); int main() { codescracker(); return 0; } void codescracker() { cout<<\"Hello World\"; }",
    "answers": [
      {
        "text": "2",
        "correct": false
      },
      {
        "text": "1",
        "correct": false
      },
      {
        "text": "все",
        "correct": false
      },
      {
        "text": "3",
        "correct": true
      }
    ]
  },
  {
    "question": "Выберите правильные утверждения",
    "answers": [
      {
        "text": "Интерпретация быстрее компиляции",
        "correct": false
      },
      {
        "text": "Написание интерпретатора проще т.к. для него не обязательно писать код код транслятора",
        "correct": true
      },
      {
        "text": "Динамическая компиляция (компиляция во время выполнения программы) - вариант интерпретации",
        "correct": false
      },
      {
        "text": "Python как и С++ компилируемый язык",
        "correct": false
      },
      {
        "text": "Интерпретация медленней компиляции",
        "correct": true
      },
      {
        "text": "Высокая скорость языка С++ достигается в том числе потому что он не интерпретируемый",
        "correct": true
      }
    ]
  },
  {
    "question": "Как должна выглядеть команда для печати текста \"Привет студентам!\"?",
    "answers": [
      {
        "text": "std::cout(Привет студентам!)'';",
        "correct": false
      },
      {
        "text": "std::cout << (''Привет студентам!'');",
        "correct": false
      },
      {
        "text": "std::cout << Привет студентам!;",
        "correct": false
      },
      {
        "text": "std::cout << ''Привет студентам!'';",
        "correct": true
      }
    ]
  },
  {
    "question": "Что выполнит следующая программа? #include <iostream> int main() { std::cout << \"C++ is fun\"; }",
    "answers": [
      {
        "text": "текст ''C++isfun''",
        "correct": false
      },
      {
        "text": "текст ''C++ is fun''",
        "correct": true
      },
      {
        "text": "0",
        "correct": false
      },
      {
        "text": "Ничего",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой правильный способ комментирования в программировании на C++?",
    "answers": [
      {
        "text": "#",
        "correct": false
      },
      {
        "text": "Все перечисленное",
        "correct": false
      },
      {
        "text": "//",
        "correct": true
      },
      {
        "text": "<!--->",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько строк будет в выводе следующей программы? #include <iostream> int main() { // print c++ is fun std::cout << \"C++ is fun\"; // c++ is fun // c++ c++ c++ }",
    "answers": [
      {
        "text": "2",
        "correct": false
      },
      {
        "text": "1",
        "correct": true
      },
      {
        "text": "3",
        "correct": false
      },
      {
        "text": "4",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько комментариев может быть в программе?",
    "answers": [
      {
        "text": "не более количества строк кода",
        "correct": false
      },
      {
        "text": "не более количества символов кода",
        "correct": false
      },
      {
        "text": "сколько угодно",
        "correct": true
      },
      {
        "text": "1 строка",
        "correct": false
      }
    ]
  },
  {
    "question": "Для чего предназначены комментарии?",
    "answers": [
      {
        "text": "для того, чтобы другие люди понимали ваш код",
        "correct": true
      },
      {
        "text": "для того чтобы писать в них повторяющийся код",
        "correct": false
      },
      {
        "text": "для написания функционала программы",
        "correct": false
      },
      {
        "text": "для описания того, что делает код, на понятном языке",
        "correct": false
      }
    ]
  },
  {
    "question": "Что из этого является символьным литералом?",
    "answers": [
      {
        "text": "5,6",
        "correct": false
      },
      {
        "text": "'5'",
        "correct": true
      },
      {
        "text": "5",
        "correct": false
      },
      {
        "text": "0",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие из следующих значений может хранить переменная test? int test;",
    "answers": [
      {
        "text": "''19''",
        "correct": false
      },
      {
        "text": "19,9",
        "correct": false
      },
      {
        "text": "''девятнадцать''",
        "correct": false
      },
      {
        "text": "19",
        "correct": true
      }
    ]
  },
  {
    "question": "Как сделать перевод на новую строку?",
    "answers": [
      {
        "text": "\\n",
        "correct": true
      },
      {
        "text": "\\b",
        "correct": false
      },
      {
        "text": "\\?",
        "correct": false
      },
      {
        "text": "\\f",
        "correct": false
      }
    ]
  },
  {
    "question": "int a=10. Что из этого является литералом?",
    "answers": [
      {
        "text": "=",
        "correct": false
      },
      {
        "text": "int",
        "correct": false
      },
      {
        "text": "a",
        "correct": false
      },
      {
        "text": "10",
        "correct": true
      }
    ]
  },
  {
    "question": "Какое из объявлений переменной верно?",
    "answers": [
      {
        "text": "char letter = 5;",
        "correct": false
      },
      {
        "text": "char letter = 5.6;",
        "correct": false
      },
      {
        "text": "char letter = ''a'';",
        "correct": false
      },
      {
        "text": "char letter = 'a';",
        "correct": true
      }
    ]
  },
  {
    "question": "Как объявить целочисленную переменную age со значением 50?",
    "answers": [
      {
        "text": "int age = 50",
        "correct": true
      },
      {
        "text": "double int = '50'",
        "correct": false
      },
      {
        "text": "char age = '50'",
        "correct": false
      },
      {
        "text": "double age = 50",
        "correct": false
      }
    ]
  },
  {
    "question": "Как правильно объявить переменную с логическим типом данных?",
    "answers": [
      {
        "text": "char x = 'false",
        "correct": false
      },
      {
        "text": "long x = 1",
        "correct": false
      },
      {
        "text": "bool x = false",
        "correct": true
      },
      {
        "text": "log x = true",
        "correct": false
      }
    ]
  },
  {
    "question": "Логический тип данных может иметь одно из двух значений: true или false.",
    "answers": [
      {
        "text": "Верно",
        "correct": true
      },
      {
        "text": "Неверно",
        "correct": false
      }
    ]
  },
  {
    "question": "Укажите ошибочные объявления переменных.",
    "answers": [
      {
        "text": "int k1_or_k2 = 1;",
        "correct": false
      },
      {
        "text": "float foR;",
        "correct": false
      },
      {
        "text": "int double = 3.14;",
        "correct": true
      },
      {
        "text": "int catch-22;",
        "correct": true
      },
      {
        "text": "double Double = 3.14;",
        "correct": false
      }
    ]
  },
  {
    "question": "Арифметическими типами данных, предназначенными для хранения чисел с плавающей запятой, являются…",
    "answers": [
      {
        "text": "char",
        "correct": false
      },
      {
        "text": "double",
        "correct": true
      },
      {
        "text": "float",
        "correct": true
      },
      {
        "text": "longlong",
        "correct": false
      },
      {
        "text": "short",
        "correct": false
      }
    ]
  },
  {
    "question": "Как может указываться состояние выхода из программы?",
    "answers": [
      {
        "text": "}",
        "correct": false
      },
      {
        "text": "#include",
        "correct": false
      },
      {
        "text": "int main()",
        "correct": false
      },
      {
        "text": "return 0",
        "correct": true
      }
    ]
  },
  {
    "question": "Внутри какого пространства имен определен объект cout?",
    "answers": [
      {
        "text": "cin",
        "correct": false
      },
      {
        "text": "iostream",
        "correct": false
      },
      {
        "text": "std",
        "correct": true
      },
      {
        "text": "cout",
        "correct": false
      }
    ]
  },
  {
    "question": "Что будет выведено в результате работы строки cout << \"hello \" << endl;?",
    "answers": [
      {
        "text": "''hello''endl",
        "correct": false
      },
      {
        "text": "''hello''<<endl",
        "correct": false
      },
      {
        "text": "hello endl",
        "correct": false
      },
      {
        "text": "hello",
        "correct": true
      }
    ]
  },
  {
    "question": "Что будет выведено в результате выполнения программы? #include <iostream> using namespace std; int main() { char a = 'x'; cout << \"hello\" << a << endl; return 0; }",
    "answers": [
      {
        "text": "helloaendl",
        "correct": false
      },
      {
        "text": "helloa",
        "correct": false
      },
      {
        "text": "hellox",
        "correct": true
      },
      {
        "text": "helloxendl",
        "correct": false
      }
    ]
  },
  {
    "question": "На рисунке представлена простейшая программа на С++ #include <iostream> int main (int list) { std : : cout<<\"Hello Warld!\"; return 0; }.",
    "answers": [
      {
        "text": "препроцессора для подключения библиотеки",
        "correct": true
      },
      {
        "text": "препроцессора для вызова глобальной переменной",
        "correct": false
      },
      {
        "text": "для определения макроса",
        "correct": false
      },
      {
        "text": "для вывода сообщения об ошибке во время компиляции",
        "correct": false
      }
    ]
  },
  {
    "question": "Как получить остаток от деления 4 на 3?",
    "answers": [
      {
        "text": "4%3",
        "correct": true
      },
      {
        "text": "4/3",
        "correct": false
      },
      {
        "text": "4^3",
        "correct": false
      },
      {
        "text": "4*=3",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите верные утверждения:",
    "answers": [
      {
        "text": "a+=c то же самое, что a=a-c",
        "correct": false
      },
      {
        "text": "a=a+c означает, что значение а будет увеличено на с",
        "correct": true
      },
      {
        "text": "a-=c то же самое, что a=a-c",
        "correct": false
      },
      {
        "text": "a *= b тоже самое, что a * b",
        "correct": false
      }
    ]
  },
  {
    "question": "Что будет выведено в результате выполнения данной программы? #include <iostream> using namespace std; int main() { int x = 10; double y = 15.5; x = y; cout << x << endl; return 0; }",
    "answers": [
      {
        "text": "15",
        "correct": true
      },
      {
        "text": "10",
        "correct": false
      },
      {
        "text": "10.00",
        "correct": false
      },
      {
        "text": "15.5",
        "correct": false
      }
    ]
  },
  {
    "question": "Создается 2 переменные: int num1 = 26; double num2 = 20.5; Как будет выглядеть преобразование из int в double?",
    "answers": [
      {
        "text": "num2 = (int)num1",
        "correct": false
      },
      {
        "text": "num1 = (int)num2",
        "correct": false
      },
      {
        "text": "num2 = (double)num1",
        "correct": true
      },
      {
        "text": "num1 = (double)num2",
        "correct": false
      }
    ]
  },
  {
    "question": "Какое неявное преобразование типов происходит при присваивании целочисленного значения переменной типа float в языке C++?",
    "answers": [
      {
        "text": "Преобразование в логический тип данных",
        "correct": false
      },
      {
        "text": "Преобразование в строковый тип данных",
        "correct": false
      },
      {
        "text": "Преобразование в тип данных с плавающей точкой",
        "correct": true
      },
      {
        "text": "Преобразование в тип данных без знака",
        "correct": false
      }
    ]
  },
  {
    "question": "Каким будет результат программы? #include <iostream> using namespace std; int main() { bool result; result = (3 != 5) && (3 < 5); cout << result << endl; return 0; }",
    "answers": [
      {
        "text": "2",
        "correct": false
      },
      {
        "text": "0",
        "correct": false
      },
      {
        "text": "1",
        "correct": true
      },
      {
        "text": "8",
        "correct": false
      }
    ]
  },
  {
    "question": "Как можно проверить равенство двух переменных?",
    "answers": [
      {
        "text": "=",
        "correct": false
      },
      {
        "text": "<>",
        "correct": false
      },
      {
        "text": "==",
        "correct": true
      },
      {
        "text": "!=",
        "correct": false
      }
    ]
  },
  {
    "question": "Как можно узнать размер типа данных?",
    "answers": [
      {
        "text": "оператор ?:",
        "correct": false
      },
      {
        "text": "оператор len()",
        "correct": false
      },
      {
        "text": "оператор <>",
        "correct": false
      },
      {
        "text": "оператор sizeof()",
        "correct": true
      }
    ]
  },
  {
    "question": "Какой оператор используется для проверки равенства двух значений в условии if-else?",
    "answers": [
      {
        "text": "==",
        "correct": false
      },
      {
        "text": "&",
        "correct": true
      },
      {
        "text": "=",
        "correct": false
      },
      {
        "text": "!=",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой оператор используется для проверки неравенства двух значений в условии if-else?",
    "answers": [
      {
        "text": "==",
        "correct": false
      },
      {
        "text": "!=",
        "correct": true
      },
      {
        "text": "||",
        "correct": false
      },
      {
        "text": "=",
        "correct": false
      }
    ]
  },
  {
    "question": "Каким будет результат выполнения программы? #include <iostream> using namespace std; int main() { int number1=10, number2=20; if (number1 >= number2) { cout << \"1\" << endl; } else { cout << \"2\" << endl; } return 0; }",
    "answers": [
      {
        "text": "2",
        "correct": true
      },
      {
        "text": "1",
        "correct": false
      },
      {
        "text": "2endl",
        "correct": false
      },
      {
        "text": "10",
        "correct": false
      }
    ]
  },
  {
    "question": "Каким будет результат выполнения программы? #include <iostream> #include <locale.h> using namespace std; int main() { int num = 10; if (num != 0) { if (num > 0) { cout << \"Positive \"; } else { cout << \"Negative \"; } } else { cout << \"Is 0\" << endl; } cout << \"goodbye\" << endl; return 0; }",
    "answers": [
      {
        "text": "Positive",
        "correct": false
      },
      {
        "text": "goodbye",
        "correct": false
      },
      {
        "text": "Negative",
        "correct": false
      },
      {
        "text": "Positive goodbye",
        "correct": true
      }
    ]
  },
  {
    "question": "Сколько раз будет выполнен цикл? for(int i=0; i<=5; i+=3);",
    "answers": [
      {
        "text": "3",
        "correct": false
      },
      {
        "text": "5",
        "correct": false
      },
      {
        "text": "2",
        "correct": true
      },
      {
        "text": "1",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для проверки условия в цикле for?",
    "answers": [
      {
        "text": "{}",
        "correct": false
      },
      {
        "text": "()",
        "correct": true
      },
      {
        "text": "[]",
        "correct": false
      },
      {
        "text": "//",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для выполнения блока кода в цикле for?",
    "answers": [
      {
        "text": "a)\t{}",
        "correct": true
      },
      {
        "text": "a)\t[]",
        "correct": false
      },
      {
        "text": "a)\t//",
        "correct": false
      },
      {
        "text": "a)\t()",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для проверки условия в цикле while?",
    "answers": [
      {
        "text": "[]",
        "correct": false
      },
      {
        "text": "{}",
        "correct": false
      },
      {
        "text": "//",
        "correct": false
      },
      {
        "text": "()",
        "correct": true
      }
    ]
  },
  {
    "question": "Какая конструкция может использоваться для проверки условия в цикле while?",
    "answers": [
      {
        "text": "while",
        "correct": false
      },
      {
        "text": "for",
        "correct": false
      },
      {
        "text": "if-else",
        "correct": true
      },
      {
        "text": "switch-case",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для выхода из цикла?",
    "answers": [
      {
        "text": "continue",
        "correct": false
      },
      {
        "text": "return",
        "correct": false
      },
      {
        "text": "break",
        "correct": true
      },
      {
        "text": "exit",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для пропуска текущей итерации цикла?",
    "answers": [
      {
        "text": "continue",
        "correct": true
      },
      {
        "text": "return",
        "correct": false
      },
      {
        "text": "exit",
        "correct": false
      },
      {
        "text": "break",
        "correct": false
      }
    ]
  },
  {
    "question": "break нельзя использовать с вложенным циклом.",
    "answers": [
      {
        "text": "Неверно",
        "correct": true
      },
      {
        "text": "Верно",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой оператор используется для указания значения, с которым будет сравниваться выражение в операторе switch?",
    "answers": [
      {
        "text": "case",
        "correct": true
      },
      {
        "text": "break",
        "correct": false
      },
      {
        "text": "continue",
        "correct": false
      },
      {
        "text": "default",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой оператор используется для указания действий, которые должны быть выполнены, если выражение в операторе switch не соответствует ни одному из значений case?",
    "answers": [
      {
        "text": "continue",
        "correct": false
      },
      {
        "text": "default",
        "correct": true
      },
      {
        "text": "case",
        "correct": false
      },
      {
        "text": "break",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько раз проверяется выражение в switch?",
    "answers": [
      {
        "text": "каждый раз, когда встречается break",
        "correct": false
      },
      {
        "text": "каждый раз, когда сравнивается с case",
        "correct": false
      },
      {
        "text": "с первым и последним case",
        "correct": false
      },
      {
        "text": "один",
        "correct": true
      }
    ]
  },
  {
    "question": "Какие пунктуационные знаки используются в программах на С++ для обозначения начала и конца блоков кода? Примечание. Рассматривайте блок кода как тело некоторой функции, например, функции main().",
    "answers": [
      {
        "text": "{и}",
        "correct": true
      },
      {
        "text": "(и)",
        "correct": false
      },
      {
        "text": "BEGIN и END",
        "correct": false
      },
      {
        "text": "->и<-",
        "correct": false
      }
    ]
  },
  {
    "question": "Дана реализация функции fact() int fact (int val) { int ret = 1; while (vel > 1) return ret; }. Корректный вызов функции осуществляется записью…",
    "answers": [
      {
        "text": "fact(“Hello”;",
        "correct": false
      },
      {
        "text": "fact(42,10;",
        "correct": false
      },
      {
        "text": "fact(14);",
        "correct": true
      },
      {
        "text": "fact();",
        "correct": false
      }
    ]
  },
  {
    "question": "Запись вида void func (void) { /*. . . */ } означает, что …",
    "answers": [
      {
        "text": "функция вызывает саму себя, рекурсивно",
        "correct": false
      },
      {
        "text": "функция принимает массив аргументов",
        "correct": false
      },
      {
        "text": "функция принимает аргумент любого типа",
        "correct": false
      },
      {
        "text": "функция имеет пустой список параметров",
        "correct": true
      }
    ]
  },
  {
    "question": "Что включает в себя определение функции?",
    "answers": [
      {
        "text": "конструктор (constructor)",
        "correct": false
      },
      {
        "text": "деструктор (destructor)",
        "correct": false
      },
      {
        "text": "список параметров (parameter)",
        "correct": true
      },
      {
        "text": "тип возвращаемого значения (return type)",
        "correct": true
      }
    ]
  },
  {
    "question": "Перегруженные функции - это...",
    "answers": [
      {
        "text": "функции, которые не возвращают никакого значения",
        "correct": false
      },
      {
        "text": "библиотечные функции",
        "correct": false
      },
      {
        "text": "функции, имеющие одинаковое имя, но разные аргументы",
        "correct": true
      },
      {
        "text": "функции с двумя параметрами",
        "correct": false
      }
    ]
  },
  {
    "question": "В каком случае при вызове функции будут использованы параметры по умолчанию?",
    "answers": [
      {
        "text": "функция с аргументами по умолчанию вызывается с передачей аргументов",
        "correct": false
      },
      {
        "text": "функция с аргументами по умолчанию вызывается без передачи аргументов",
        "correct": true
      },
      {
        "text": "функция без аргументов по умолчанию вызывается без передачи аргументов",
        "correct": false
      },
      {
        "text": "функция без аргументов по умолчанию вызывается с передачей аргументов",
        "correct": false
      }
    ]
  },
  {
    "question": "Определена функция cat() с 2 параметрами по умолчанию. Она вызывается с указанием одного параметра. Каким будет второй параметр?",
    "answers": [
      {
        "text": "второй параметр будет таким же, как первый",
        "correct": false
      },
      {
        "text": "в качестве второго параметра будет использоваться аргумент по умолчанию",
        "correct": true
      },
      {
        "text": "функция будет работать с одним параметром",
        "correct": false
      },
      {
        "text": "программа не запустится, выдаст ошибку",
        "correct": false
      }
    ]
  },
  {
    "question": "Доступ к локальной переменной возможен...",
    "answers": [
      {
        "text": "только при использовании параметров по умолчанию",
        "correct": false
      },
      {
        "text": "только внутри функции, в которой она определена",
        "correct": true
      },
      {
        "text": "пока запущена программа",
        "correct": false
      },
      {
        "text": "из любой части программы",
        "correct": false
      }
    ]
  },
  {
    "question": "Добавление ключевого слова static к определению локальной переменной внутри функции обеспечивает …",
    "answers": [
      {
        "text": "сохранение переменной по завершении работы функции.",
        "correct": true
      },
      {
        "text": "инициализацию объекта, после достижения определения объекта",
        "correct": false
      },
      {
        "text": "инициализацию переменной значением по умолчанию, соответствующему типу возвращаемому функцией",
        "correct": false
      },
      {
        "text": "гарантированное удаление переменной, когда процесс выполнения достигнет конца блока тела функции",
        "correct": false
      }
    ]
  },
  {
    "question": "Доступ к глобальной переменной возможен...",
    "answers": [
      {
        "text": "только при использовании параметров по умолчанию",
        "correct": false
      },
      {
        "text": "только внутри функции, в которой она определена",
        "correct": false
      },
      {
        "text": "только при перегрузке функции",
        "correct": false
      },
      {
        "text": "из любой части программы",
        "correct": true
      }
    ]
  },
  {
    "question": "Какой класс хранения используется для переменных, которые должны сохранять свое значение между вызовами функции?",
    "answers": [
      {
        "text": "register",
        "correct": false
      },
      {
        "text": "auto",
        "correct": false
      },
      {
        "text": "static",
        "correct": true
      },
      {
        "text": "extern",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие свойства имеет переменная?",
    "answers": [
      {
        "text": "класс хранения",
        "correct": true
      },
      {
        "text": "локальность",
        "correct": false
      },
      {
        "text": "тип данных",
        "correct": true
      },
      {
        "text": "глобальность",
        "correct": false
      }
    ]
  },
  {
    "question": "Что такое рекурсия?",
    "answers": [
      {
        "text": "То же, что условие",
        "correct": false
      },
      {
        "text": "Вызов функцией самой себя",
        "correct": true
      },
      {
        "text": "Библиотечная функция",
        "correct": false
      },
      {
        "text": "Использование пользовательской функции",
        "correct": false
      }
    ]
  },
  {
    "question": "В чем заключается преимущество использования рекурсии?",
    "answers": [
      {
        "text": "рекурсия занимает много места в стеке по сравнению с итеративной программой",
        "correct": false
      },
      {
        "text": "рекурсия делает код короче",
        "correct": true
      },
      {
        "text": "рекурсия используется в задачах, касающихся структур данных и сложных алгоритмов, таких как обход графов и деревьев",
        "correct": true
      },
      {
        "text": "рекурсия использует больше процессорного времени",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите верное объявление массива, содержащего целочисленный тип данных.",
    "answers": [
      {
        "text": "array[]",
        "correct": false
      },
      {
        "text": "int array[]",
        "correct": true
      },
      {
        "text": "array()",
        "correct": false
      },
      {
        "text": "array{}",
        "correct": false
      }
    ]
  },
  {
    "question": "Как обратиться к элементу массива по его индексу?",
    "answers": [
      {
        "text": "array[index]",
        "correct": true
      },
      {
        "text": "array.index",
        "correct": false
      },
      {
        "text": "array(index)",
        "correct": false
      },
      {
        "text": "array{index}",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой индекс нужно использовать для обращения к первому элементу массива?",
    "answers": [
      {
        "text": "1",
        "correct": false
      },
      {
        "text": "-1",
        "correct": false
      },
      {
        "text": "size-1",
        "correct": false
      },
      {
        "text": "0",
        "correct": true
      }
    ]
  },
  {
    "question": "Сколько элементов может содержать массив array[2][5]?",
    "answers": [
      {
        "text": "2",
        "correct": false
      },
      {
        "text": "5",
        "correct": false
      },
      {
        "text": "10",
        "correct": true
      },
      {
        "text": "0",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой тип данных может храниться в массиве int x[15];?",
    "answers": [
      {
        "text": "символ",
        "correct": false
      },
      {
        "text": "целочисленный тип",
        "correct": true
      },
      {
        "text": "строка",
        "correct": false
      },
      {
        "text": "число с плавающей точкой",
        "correct": false
      }
    ]
  },
  {
    "question": "В качестве аргумента функция может принимать двумерный массив.",
    "answers": [
      {
        "text": "Верно",
        "correct": true
      },
      {
        "text": "Неверно",
        "correct": false
      }
    ]
  },
  {
    "question": "Корректной инициализацией массива iArray значениями является …",
    "answers": [
      {
        "text": "int iArray[5] = {1;2;3;4};",
        "correct": false
      },
      {
        "text": "int iArray[5] = {1,2,3,4};",
        "correct": true
      },
      {
        "text": "int iArray[5] = (1,2,3,4,5);",
        "correct": false
      },
      {
        "text": "int iArray[5] = {1..5};",
        "correct": false
      }
    ]
  },
  {
    "question": "Как передать массив типа double размерностью 10 с именем students в функцию university?",
    "answers": [
      {
        "text": "double students(double university[10]) { }",
        "correct": false
      },
      {
        "text": "double university(int students[10]) { }",
        "correct": false
      },
      {
        "text": "double university(double students[10]) { }",
        "correct": true
      },
      {
        "text": "int university(double students[10]) { }",
        "correct": false
      }
    ]
  },
  {
    "question": "Как программа на С узнает о конце строки?",
    "answers": [
      {
        "text": "по символу \\",
        "correct": false
      },
      {
        "text": "по нулевому символу \\0",
        "correct": true
      },
      {
        "text": "по символу \\\\",
        "correct": false
      },
      {
        "text": "по заранее заданной длине",
        "correct": false
      }
    ]
  },
  {
    "question": "Как объявить строковую переменную в С++?",
    "answers": [
      {
        "text": "char[] str",
        "correct": false
      },
      {
        "text": "str str",
        "correct": false
      },
      {
        "text": "string str",
        "correct": true
      },
      {
        "text": "char str",
        "correct": false
      }
    ]
  },
  {
    "question": "Как получить символы с клавиатуры?",
    "answers": [
      {
        "text": "input()",
        "correct": false
      },
      {
        "text": "cin >>",
        "correct": true
      },
      {
        "text": "scanf()",
        "correct": false
      },
      {
        "text": "cout <<",
        "correct": false
      }
    ]
  },
  {
    "question": "Как объявить структуру?",
    "answers": [
      {
        "text": "typedef MyStruct;",
        "correct": false
      },
      {
        "text": "MyStruct;",
        "correct": false
      },
      {
        "text": "struct;",
        "correct": false
      },
      {
        "text": "struct MyStruct;",
        "correct": true
      }
    ]
  },
  {
    "question": "Какая структура здесь объявлена? struct Cat { char name; int age; };",
    "answers": [
      {
        "text": "Cat",
        "correct": true
      },
      {
        "text": "age",
        "correct": false
      },
      {
        "text": "struct",
        "correct": false
      },
      {
        "text": "name",
        "correct": false
      }
    ]
  },
  {
    "question": "Создана структура. Как можно получить доступ к member из variable?",
    "answers": [
      {
        "text": "struct member",
        "correct": false
      },
      {
        "text": "variable.member",
        "correct": true
      },
      {
        "text": "struct variable.member",
        "correct": false
      },
      {
        "text": "member.variable",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для доступа к членам структуры внутри функции?",
    "answers": [
      {
        "text": ":",
        "correct": false
      },
      {
        "text": "*",
        "correct": false
      },
      {
        "text": "()",
        "correct": false
      },
      {
        "text": ".",
        "correct": true
      }
    ]
  },
  {
    "question": "В функцию можно передавать структурные переменные.",
    "answers": [
      {
        "text": "Верно",
        "correct": true
      },
      {
        "text": "Неверно",
        "correct": false
      }
    ]
  },
  {
    "question": "Как передать структуру в качестве параметра в функцию?",
    "answers": [
      {
        "text": "все варианты возможны",
        "correct": true
      },
      {
        "text": "по ссылке",
        "correct": false
      },
      {
        "text": "по значению",
        "correct": false
      },
      {
        "text": "по указателю",
        "correct": false
      }
    ]
  },
  {
    "question": "Как объявить перечисление?",
    "answers": [
      {
        "text": "MyEnum",
        "correct": false
      },
      {
        "text": "enum MyEnum",
        "correct": true
      },
      {
        "text": "typedef enum MyEnum",
        "correct": false
      },
      {
        "text": "typedef MyEnum",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая функция используется для преобразования целочисленного значения в элемент перечисления?",
    "answers": [
      {
        "text": "нет встроенной функции для такого преобразования",
        "correct": true
      },
      {
        "text": "enum_to_int()",
        "correct": false
      },
      {
        "text": "enum_cast()",
        "correct": false
      },
      {
        "text": "int_to_enum()",
        "correct": false
      }
    ]
  },
  {
    "question": "Корректным объявлением класса является …",
    "answers": [
      {
        "text": "class B { }",
        "correct": false
      },
      {
        "text": "class A { inf x; };",
        "correct": true
      },
      {
        "text": "publuc class A { }",
        "correct": false
      },
      {
        "text": "pdject A { int x; };",
        "correct": false
      }
    ]
  },
  {
    "question": "Когда определяется класс...",
    "answers": [
      {
        "text": "выделяется необходимая память",
        "correct": false
      },
      {
        "text": "в нем же создаются объекты",
        "correct": false
      },
      {
        "text": "определяется только спецификация объекта",
        "correct": true
      },
      {
        "text": "память не выделяется",
        "correct": true
      }
    ]
  },
  {
    "question": "Как создать класс в С++?",
    "answers": [
      {
        "text": "className ( );",
        "correct": false
      },
      {
        "text": "class className { };",
        "correct": true
      },
      {
        "text": "className { };",
        "correct": false
      },
      {
        "text": "class className ( );",
        "correct": false
      }
    ]
  },
  {
    "question": "Конструктор:",
    "answers": [
      {
        "text": "имеет возвращаемый тип",
        "correct": false
      },
      {
        "text": "автоматически вызывается при создании объекта",
        "correct": true
      },
      {
        "text": "имеет то же имя, что класс",
        "correct": true
      },
      {
        "text": "имеет возвращаемый тип void",
        "correct": false
      }
    ]
  },
  {
    "question": "Как называется конструктор с параметрами?",
    "answers": [
      {
        "text": "конструктор копирования",
        "correct": false
      },
      {
        "text": "параметризованный конструктор",
        "correct": true
      },
      {
        "text": "конструктор по умолчанию",
        "correct": false
      },
      {
        "text": "делегирующий конструктор",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой конструктор описан в приведенном коде? class MyClass { public: MyClass() { // } };",
    "answers": [
      {
        "text": "конструктор с инициализацией списка",
        "correct": false
      },
      {
        "text": "конструктор по умолчанию",
        "correct": true
      },
      {
        "text": "конструктор с параметрами",
        "correct": false
      },
      {
        "text": "конструктор копирования",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для доступа к членам объекта в языке С++?",
    "answers": [
      {
        "text": "member(obj);",
        "correct": false
      },
      {
        "text": "member[object];",
        "correct": false
      },
      {
        "text": "object(member);",
        "correct": false
      },
      {
        "text": "obj.member;",
        "correct": true
      }
    ]
  },
  {
    "question": "Какая конструкция используется для передачи объекта по значению в функцию?",
    "answers": [
      {
        "text": "functionName(object);",
        "correct": true
      },
      {
        "text": "functionName.object;",
        "correct": false
      },
      {
        "text": "functionName(&object);",
        "correct": false
      },
      {
        "text": "functionName(*object);",
        "correct": false
      }
    ]
  },
  {
    "question": "Из функции нельзя вернуть объект.",
    "answers": [
      {
        "text": "Неверно",
        "correct": true
      },
      {
        "text": "Верно",
        "correct": false
      }
    ]
  },
  {
    "question": "Какое ключевое слово используется для перегрузки операторов?",
    "answers": [
      {
        "text": "operator",
        "correct": true
      },
      {
        "text": "public",
        "correct": false
      },
      {
        "text": "class",
        "correct": false
      },
      {
        "text": "void",
        "correct": false
      }
    ]
  },
  {
    "question": "Что выведет данная программа? #include <iostream> using namespace std; class Count { private: int value; public: Count() : value(10) {} void operator ++ () { ++value; } void display() { cout << \"Count: \" << value << endl; } }; int main() { Count count1; ++count1; count1.display(); return 0; }",
    "answers": [
      {
        "text": "Count: 10",
        "correct": false
      },
      {
        "text": "0",
        "correct": false
      },
      {
        "text": "10",
        "correct": false
      },
      {
        "text": "Count: 11",
        "correct": true
      }
    ]
  },
  {
    "question": "Перегрузка операторов не может использоваться для программ, работающих с комплексными числами.",
    "answers": [
      {
        "text": "Верно",
        "correct": false
      },
      {
        "text": "Неверно",
        "correct": true
      }
    ]
  },
  {
    "question": "Как можно обратиться к адресу переменной num?",
    "answers": [
      {
        "text": "*num",
        "correct": false
      },
      {
        "text": "&num",
        "correct": true
      },
      {
        "text": "%num",
        "correct": false
      },
      {
        "text": "!num",
        "correct": false
      }
    ]
  },
  {
    "question": "Как объявить указатель на переменную?",
    "answers": [
      {
        "text": "*pointer",
        "correct": false
      },
      {
        "text": "&pointer",
        "correct": false
      },
      {
        "text": "pointer",
        "correct": false
      },
      {
        "text": "int *pointer",
        "correct": true
      }
    ]
  },
  {
    "question": "Как написать, чтобы указатель varPoint указывал на адрес var?",
    "answers": [
      {
        "text": "varPoint = &var;",
        "correct": true
      },
      {
        "text": "varPoint = var;",
        "correct": false
      },
      {
        "text": "*varPoint = &var;",
        "correct": false
      },
      {
        "text": "*varPoint = var;",
        "correct": false
      }
    ]
  },
  {
    "question": "Указатели не могут быть использованы для пользовательских типов, таких как structure.",
    "answers": [
      {
        "text": "Неверно",
        "correct": true
      },
      {
        "text": "Верно",
        "correct": false
      }
    ]
  },
  {
    "question": "Выберите верные утверждения:",
    "answers": [
      {
        "text": "указатель может использоваться только для типа данных int",
        "correct": false
      },
      {
        "text": "указатели используются для хранения адресов переменных",
        "correct": true
      },
      {
        "text": "при использовании указателей на структуры можно обращаться к его элементам с помощью оператора ->",
        "correct": true
      },
      {
        "text": "указатели используются для хранения значений переменных",
        "correct": false
      }
    ]
  },
  {
    "question": "Как связаны массивы и указатели в C++?",
    "answers": [
      {
        "text": "Массивы и указатели не имеют связи",
        "correct": false
      },
      {
        "text": "Массивы и указатели - это одно и то же",
        "correct": false
      },
      {
        "text": "Массивы могут указывать на указатели",
        "correct": false
      },
      {
        "text": "Указатели могут указывать на массивы",
        "correct": true
      }
    ]
  },
  {
    "question": "Какое значение возвратит запуск на выполнение данного фрагмента программного кода? int a [] = {1, 2, 3, 4, 5, 6}; int *ptr = (int*) (&a+1); cout<<*(ptr-1);",
    "answers": [
      {
        "text": "1",
        "correct": false
      },
      {
        "text": "0",
        "correct": false
      },
      {
        "text": "6",
        "correct": true
      },
      {
        "text": "5",
        "correct": false
      }
    ]
  },
  {
    "question": "Что такое возврат по ссылке в языке C?",
    "answers": [
      {
        "text": "Процесс возвращения значения из функции по ссылке",
        "correct": true
      },
      {
        "text": "Процесс возвращения значения из функции по значению",
        "correct": false
      },
      {
        "text": "Процесс возвращения указателя на значение из функции",
        "correct": false
      },
      {
        "text": "Процесс возвращения ссылки на указатель из функции",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для возврата значения по ссылке в языке C?",
    "answers": [
      {
        "text": "continue",
        "correct": false
      },
      {
        "text": "break",
        "correct": false
      },
      {
        "text": "&return",
        "correct": false
      },
      {
        "text": "Return",
        "correct": true
      }
    ]
  },
  {
    "question": "Каким будет вывод программы? #include <iostream> using namespace std; void swap(int *n1, int *n2); int main() { int num1 = 5, num2 = 20; swap(&num1, &num2); cout << \"num1 = \" << num1 << endl; cout << \"num2 = \" << num2; return 0; } void swap(int* n1, int* n2) { int temp; temp = *n1; *n1 = *n2; *n2 = temp; }",
    "answers": [
      {
        "text": "num1=5 num2=20",
        "correct": false
      },
      {
        "text": "temp=5 n1=20 n2=5",
        "correct": false
      },
      {
        "text": "num1=20 num2=5",
        "correct": true
      },
      {
        "text": "temp=5 num1=20",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для передачи переменной по ссылке с использованием указателей в функциях С++?",
    "answers": [
      {
        "text": "variable.functionName()",
        "correct": false
      },
      {
        "text": "functionName(*variable)",
        "correct": false
      },
      {
        "text": "functionName(&variable)",
        "correct": true
      },
      {
        "text": "functionName(variable)",
        "correct": false
      }
    ]
  },
  {
    "question": "Как будет выглядеть вызов функции, в которую в качестве аргумента передается не сама переменная, а её адрес?",
    "answers": [
      {
        "text": "a(func)",
        "correct": false
      },
      {
        "text": "func(&a)",
        "correct": true
      },
      {
        "text": "afunc(a)",
        "correct": false
      },
      {
        "text": "a.func()",
        "correct": false
      }
    ]
  },
  {
    "question": "Корректными объявлениями функций, возвращающих указатель на массив, являются …",
    "answers": [
      {
        "text": "int (*func(int i, char k))[38];",
        "correct": true
      },
      {
        "text": "int[12] (*func(int k));",
        "correct": false
      },
      {
        "text": "int[9] (*func()[9]);",
        "correct": false
      },
      {
        "text": "Complex (*func(double gen))[4];",
        "correct": true
      }
    ]
  },
  {
    "question": "В каких случаях может быть полезным выделение динамической памяти?",
    "answers": [
      {
        "text": "точно известно количество элементов, которое должно быть записано в массив",
        "correct": false
      },
      {
        "text": "размер объявленного вами массива может оказаться недостаточным",
        "correct": true
      },
      {
        "text": "заранее неизвестно, сколько памяти потребуется",
        "correct": true
      },
      {
        "text": "заранее известно, какого размера будет массив",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой оператор используется для освобождения памяти?",
    "answers": [
      {
        "text": "delete",
        "correct": true
      },
      {
        "text": "new",
        "correct": false
      },
      {
        "text": "malloc",
        "correct": false
      },
      {
        "text": "free",
        "correct": false
      }
    ]
  },
  {
    "question": "Как динамически выделить память для массива из number элементов, хранящего числа с плавающей запятой?",
    "answers": [
      {
        "text": "float* ptr; ptr = new float[number];",
        "correct": true
      },
      {
        "text": "float *ptr; ptr = new int[number];",
        "correct": false
      },
      {
        "text": "float *ptr; ptr = new int(number);",
        "correct": false
      },
      {
        "text": "int* ptr; ptr = new float[number];",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой модификатор доступа позволяет членам базового класса быть доступными только внутри самого класса и его друзей?",
    "answers": [
      {
        "text": "private",
        "correct": true
      },
      {
        "text": "internal",
        "correct": false
      },
      {
        "text": "public",
        "correct": false
      },
      {
        "text": "protected",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой модификатор доступа позволяет производному классу иметь доступ к членам базового класса, но не позволяет внешним классам иметь доступ к членам производного класса?",
    "answers": [
      {
        "text": "protected",
        "correct": true
      },
      {
        "text": "private",
        "correct": false
      },
      {
        "text": "public",
        "correct": false
      },
      {
        "text": "base",
        "correct": false
      }
    ]
  },
  {
    "question": "Дан программный код с реализацией наследования. class Mix { public: int present; protected: int enjoy; };",
    "answers": [
      {
        "text": "struct A : Mix {};",
        "correct": false
      },
      {
        "text": "class B : Mix {};",
        "correct": false
      },
      {
        "text": "class C : public Mix {};",
        "correct": false
      },
      {
        "text": "struct D : protected Mix {}",
        "correct": true
      }
    ]
  },
  {
    "question": "В результате наследования, члены класса Mix present и enjoy имеют атрибут доступа private в производном классе …",
    "answers": [
      {
        "text": "A",
        "correct": false
      },
      {
        "text": "D",
        "correct": false
      },
      {
        "text": "B",
        "correct": true
      },
      {
        "text": "C",
        "correct": false
      }
    ]
  },
  {
    "question": "Дан фрагмент программного кода class Patient { private: int studentNumber; string group; string name; public: void learning() { // код } void reading() { // код } }; Какие переменные или функции будут закрытыми?",
    "answers": [
      {
        "text": "group",
        "correct": true
      },
      {
        "text": "reading()",
        "correct": false
      },
      {
        "text": "studentNumber",
        "correct": true
      },
      {
        "text": "name",
        "correct": true
      },
      {
        "text": "learning()",
        "correct": false
      }
    ]
  },
  {
    "question": "Как правильно указать, что класс Bee является производным от класса Insect?",
    "answers": [
      {
        "text": "class Insect : public Bee { }",
        "correct": false
      },
      {
        "text": "public Bee(Insect ) { }",
        "correct": false
      },
      {
        "text": "class Bee (Insect ) { }",
        "correct": false
      },
      {
        "text": "class Bee : public Insect { }",
        "correct": true
      }
    ]
  },
  {
    "question": "Как называется явление, когда одна и та же функция определяется и в производном, и в базовом классе?",
    "answers": [
      {
        "text": "переопределение функции",
        "correct": true
      },
      {
        "text": "наследование функции",
        "correct": false
      },
      {
        "text": "указатель",
        "correct": false
      },
      {
        "text": "защищенная функция",
        "correct": false
      }
    ]
  },
  {
    "question": "Что такое переопределение функции в С++?",
    "answers": [
      {
        "text": "процесс создания новой функции с тем же именем, но с другой реализацией",
        "correct": true
      },
      {
        "text": "процесс создания функции с другим именем, но с тем же функционалом",
        "correct": false
      },
      {
        "text": "процесс создания функции с другим именем и другой реализацией",
        "correct": false
      },
      {
        "text": "процесс изменения сигнатуры функции",
        "correct": false
      }
    ]
  },
  {
    "question": "Какая конструкция используется для вызова функции function() базового класса Base,  из переопределенной функции в производном классе Derived?",
    "answers": [
      {
        "text": "this::function()",
        "correct": false
      },
      {
        "text": "Derived::function()",
        "correct": false
      },
      {
        "text": "Base::function()",
        "correct": false
      },
      {
        "text": "Base.function()",
        "correct": true
      }
    ]
  },
  {
    "question": "Какой модификатор доступа позволяет переопределить функцию с другим уровнем доступа в производном классе?",
    "answers": [
      {
        "text": "public",
        "correct": false
      },
      {
        "text": "private",
        "correct": false
      },
      {
        "text": "protected",
        "correct": false
      },
      {
        "text": "нет верного ответа",
        "correct": true
      }
    ]
  },
  {
    "question": "Какой тип наследования позволяет создавать иерархию классов, где производный класс наследует от базового класса, а другой класс наследует от этого производного класса?",
    "answers": [
      {
        "text": "множественное наследование",
        "correct": false
      },
      {
        "text": "многоуровневое наследование",
        "correct": true
      },
      {
        "text": "одиночное наследование",
        "correct": false
      },
      {
        "text": "иерархическое наследование",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой тип наследования позволяет классу наследовать свойства и методы от нескольких базовых классов?",
    "answers": [
      {
        "text": "одиночное наследование",
        "correct": false
      },
      {
        "text": "множественное наследование",
        "correct": true
      },
      {
        "text": "иерархическое наследование",
        "correct": false
      },
      {
        "text": "многоуровневое наследование",
        "correct": false
      }
    ]
  },
  {
    "question": "Какой из типов наследования приведен во фрагменте программного кода? class Coniferous{ // } }; class Tree{ // } }; class Spruce: public Coniferous, public Tree{};",
    "answers": [
      {
        "text": "многоуровневое наследование",
        "correct": false
      },
      {
        "text": "переопределение функции",
        "correct": false
      },
      {
        "text": "иерархическое наследование",
        "correct": false
      },
      {
        "text": "множественное наследование",
        "correct": true
      }
    ]
  },
  {
    "question": "При многоуровневом наследовании функции не могут быть переопределены.",
    "answers": [
      {
        "text": "Верно",
        "correct": false
      },
      {
        "text": "Неверно",
        "correct": true
      }
    ]
  },
  {
    "question": "Выберите правильные утверждения относительно дружественности классов",
    "answers": [
      {
        "text": "Если класс А объявляет класс В другом, то это означает, что А является другом для В",
        "correct": false
      },
      {
        "text": "Если класс А объявляет класс В другом, классы, производные от В, будут автоматически получать доступ к элементам А",
        "correct": false
      },
      {
        "text": "Если класс А объявляет класс В другом, классы, производные от В, не будут автоматически получать доступ к элементам А",
        "correct": true
      },
      {
        "text": "Если класс А объявляет класс В другом, то это не означает, что А является другом для В",
        "correct": true
      }
    ]
  },
  {
    "question": "Как объявить дружественную функцию внутри класса в С++?",
    "answers": [
      {
        "text": "объявить функцию внутри класса с ключевым словом ''friend''",
        "correct": true
      },
      {
        "text": "объявить функцию внутри класса с ключевым словом ''private''",
        "correct": false
      },
      {
        "text": "объявить функцию внутри класса с ключевым словом ''protected''",
        "correct": false
      },
      {
        "text": "объявить функцию внутри класса с ключевым словом ''public''",
        "correct": false
      }
    ]
  },
  {
    "question": "Какие члены класса могут быть доступны для дружественной функции?",
    "answers": [
      {
        "text": "только закрытые члены",
        "correct": false
      },
      {
        "text": "любые члены",
        "correct": true
      },
      {
        "text": "только защищенные члены",
        "correct": false
      },
      {
        "text": "только открытые члены",
        "correct": false
      }
    ]
  },
  {
    "question": "Как объявить виртуальную функцию внутри класса в C++?",
    "answers": [
      {
        "text": "объявить функцию внутри класса с ключевым словом ''private''",
        "correct": false
      },
      {
        "text": "объявить функцию внутри класса с ключевым словом ''public''",
        "correct": false
      },
      {
        "text": "объявить функцию внутри класса с ключевым словом ''virtual''",
        "correct": true
      },
      {
        "text": "объявить функцию внутри класса с ключевым словом ''protected''",
        "correct": false
      }
    ]
  },
  {
    "question": "Может ли виртуальная функция быть унаследована производным классом?",
    "answers": [
      {
        "text": "Зависит от уровня доступа виртуальной функции",
        "correct": false
      },
      {
        "text": "Нет, виртуальная функция не будет доступна для производного класса",
        "correct": false
      },
      {
        "text": "Зависит от уровня доступа базового класса",
        "correct": false
      },
      {
        "text": "Да, виртуальная функция будет доступна для производного класса",
        "correct": true
      }
    ]
  },
  {
    "question": "Какая функция в приведенном ниже коде является виртуальной? class Vegetable{ private: string type; public: Vegetable() : type(\"Vegetable\") {} virtual string getWeight() { return type; } }; class Cucumber: public Vegetable{ private: string type; public: Cucumber() : type(\"Cucumber\") {} string getWeight() override { return type; } };",
    "answers": [
      {
        "text": "getWeight()",
        "correct": true
      },
      {
        "text": "Cucumber()",
        "correct": false
      },
      {
        "text": "Vegetable()",
        "correct": false
      },
      {
        "text": "Type",
        "correct": false
      }
    ]
  },
  {
    "question": "Что происходит при вызове виртуальной функции в C++?",
    "answers": [
      {
        "text": "Вызывается функция из производного класса",
        "correct": true
      },
      {
        "text": "Вызывается функция из базового класса",
        "correct": false
      },
      {
        "text": "Вызывается функция, определенная в месте вызова",
        "correct": false
      },
      {
        "text": "Вызывается функция, определенная в месте определения объекта",
        "correct": false
      }
    ]
  },
  {
    "question": "Укажите способы реализации шаблонов:",
    "answers": [
      {
        "text": "шаблоны функций",
        "correct": true
      },
      {
        "text": "шаблоны классов",
        "correct": true
      },
      {
        "text": "шаблоны переменных",
        "correct": false
      },
      {
        "text": "шаблоны наследования",
        "correct": false
      }
    ]
  },
  {
    "question": "Как объявить шаблонный класс в C++?",
    "answers": [
      {
        "text": "template <T> class MyClass;",
        "correct": false
      },
      {
        "text": "template class MyClass;",
        "correct": false
      },
      {
        "text": "template <typename T> class MyClass;",
        "correct": true
      },
      {
        "text": "template <class T> class MyClass;",
        "correct": true
      }
    ]
  },
  {
    "question": "Как явно указать тип аргумента (int) при создании объекта шаблонного класса?",
    "answers": [
      {
        "text": "MyClass obj;",
        "correct": false
      },
      {
        "text": "MyClass<int> obj",
        "correct": true
      },
      {
        "text": "MyClass<t> obj;",
        "correct": false
      },
      {
        "text": "MyClass obj<int> ;",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько параметров могут иметь шаблоны классов?",
    "answers": [
      {
        "text": "шаблоны классов могут иметь только один параметр",
        "correct": false
      },
      {
        "text": "зависит от типа параметра",
        "correct": true
      },
      {
        "text": "шаблоны классов могут иметь несколько параметров",
        "correct": false
      },
      {
        "text": "зависит от наличия конструктора",
        "correct": false
      }
    ]
  },
  {
    "question": "Сколько параметров могут иметь шаблоны классов?",
    "answers": [
      {
        "text": "шаблоны классов могут иметь несколько параметров",
        "correct": true
      },
      {
        "text": "шаблоны классов могут иметь только один параметр",
        "correct": false
      },
      {
        "text": "aзависит от типа параметра",
        "correct": false
      },
      {
        "text": "зависит от наличия конструктора",
        "correct": false
      }
    ]
  },
  {
    "question": "Условный оператор if используется:",
    "answers": [
      {
        "text": "Для реализации разветвляющегося алгоритма в С++",
        "correct": true
      },
      {
        "text": "Для реализации циклического алгоритма с предусловием в С++",
        "correct": false
      },
      {
        "text": "Для реализации циклического алгоритма с постусловием в С++",
        "correct": false
      }
    ]
  },
  {
    "question": "Два оператора while и for используются:",
    "answers": [
      {
        "text": "Для реализации разветвляющегося алгоритма в С++",
        "correct": false
      },
      {
        "text": "Для реализации циклического алгоритма с предусловием в С++",
        "correct": true
      },
      {
        "text": "Для реализации циклического алгоритма с постусловием в С++",
        "correct": false
      }
    ]
  },
  {
    "question": "Оператор do while используется:",
    "answers": [
      {
        "text": "Для реализации разветвляющегося алгоритма в С++",
        "correct": false
      },
      {
        "text": "Для реализации циклического алгоритма с предусловием в С++",
        "correct": false
      },
      {
        "text": "Для реализации циклического алгоритма с постусловием в С++",
        "correct": true
      }
    ]
  },
  {
    "question": "Целый тип данных в С++:",
    "answers": [
      {
        "text": "int",
        "correct": true
      },
      {
        "text": "char",
        "correct": false
      },
      {
        "text": "wchar_t",
        "correct": false
      },
      {
        "text": "boot",
        "correct": false
      },
      {
        "text": "float",
        "correct": false
      },
      {
        "text": "double",
        "correct": false
      }
    ]
  },
  {
    "question": "Cимвольный тип данных в С++:",
    "answers": [
      {
        "text": "int",
        "correct": false
      },
      {
        "text": "char",
        "correct": true
      },
      {
        "text": "wchar_t",
        "correct": false
      },
      {
        "text": "boot",
        "correct": false
      },
      {
        "text": "float",
        "correct": false
      },
      {
        "text": "double",
        "correct": false
      }
    ]
  },
  {
    "question": "Расширенный символьный тип данных в С++:",
    "answers": [
      {
        "text": "int",
        "correct": false
      },
      {
        "text": "char",
        "correct": false
      },
      {
        "text": "wchar_t",
        "correct": true
      },
      {
        "text": "boot",
        "correct": false
      },
      {
        "text": "float",
        "correct": false
      },
      {
        "text": "double",
        "correct": false
      }
    ]
  },
  {
    "question": "Логический тип данных в С++:",
    "answers": [
      {
        "text": "int",
        "correct": false
      },
      {
        "text": "char",
        "correct": false
      },
      {
        "text": "wchar_t",
        "correct": false
      },
      {
        "text": "boot",
        "correct": true
      },
      {
        "text": "float",
        "correct": false
      },
      {
        "text": "double",
        "correct": false
      }
    ]
  },
  {
    "question": "Вещественный тип данных в С++:",
    "answers": [
      {
        "text": "int",
        "correct": false
      },
      {
        "text": "char",
        "correct": false
      },
      {
        "text": "wchar_t",
        "correct": false
      },
      {
        "text": "boot",
        "correct": false
      },
      {
        "text": "float",
        "correct": true
      },
      {
        "text": "double",
        "correct": false
      }
    ]
  },
  {
    "question": "Вещественный с двойной точностью тип данных в С++:",
    "answers": [
      {
        "text": "int",
        "correct": false
      },
      {
        "text": "char",
        "correct": false
      },
      {
        "text": "wchar_t",
        "correct": false
      },
      {
        "text": "boot",
        "correct": false
      },
      {
        "text": "float",
        "correct": false
      },
      {
        "text": "double",
        "correct": true
      }
    ]
  },
  {
    "question": "Скрытие деталей реализации; объединение данных и действий над ними:",
    "answers": [
      {
        "text": "Инкапсуляция",
        "correct": true
      },
      {
        "text": "Наследование",
        "correct": false
      },
      {
        "text": "Полиморфизм",
        "correct": false
      }
    ]
  },
  {
    "question": "Позволяет создавать иерархию объектов, в которой объекты-потомки наследуют все свойства своих предков:",
    "answers": [
      {
        "text": "Инкапсуляция",
        "correct": false
      },
      {
        "text": "Наследование",
        "correct": true
      },
      {
        "text": "Полиморфизм",
        "correct": false
      }
    ]
  },
  {
    "question": "Возможность  определения единого по имени действия, применимого ко всем объектам иерархии:",
    "answers": [
      {
        "text": "Инкапсуляция",
        "correct": false
      },
      {
        "text": "Наследование",
        "correct": false
      },
      {
        "text": "Полиморфизм",
        "correct": true
      }
    ]
  }
]
